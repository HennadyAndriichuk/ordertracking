{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\\\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u044B\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\trackingStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport { nanoid } from 'nanoid';\nimport TableRowComponent from './TableRowComponent';\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackingStatus = () => {\n  _s();\n  const columns = [\"Номер заказа\", \"Статус\", \"Дата отправки\", \"Номер телефона\", \"Сумма документа\", \"Полное имя\", \"Себестоимость\"];\n  const initialOrder = {\n    id: nanoid(),\n    orderNumber: \"\",\n    documentAmount: \"\",\n    phoneNumber: \"\",\n    fullName: \"\",\n    costPrice: \"\",\n    status: \"\",\n    dateCreated: \"\",\n    isNew: true\n  };\n  const [orders, setOrders] = useState([]);\n  const [sortConfig, setSortConfig] = useState({\n    key: 'orderNumber',\n    direction: 'ascending'\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchedOrders = await fetchOrders();\n      setOrders(fetchedOrders);\n    };\n    fetchData();\n  }, []);\n  const addRow = () => {\n    setOrders([...orders, {\n      ...initialOrder\n    }]);\n  };\n  const saveRow = async data => {\n    const {\n      id,\n      orderNumber,\n      documentAmount,\n      phoneNumber,\n      fullName,\n      costPrice,\n      status,\n      dateCreated,\n      isNew\n    } = data;\n    const payload = {\n      id,\n      orderNumber,\n      documentAmount,\n      phoneNumber,\n      fullName,\n      costPrice,\n      status,\n      dateCreated\n    };\n    if (isNew) {\n      const response = await createOrder(payload);\n      setOrders(response);\n    } else {\n      const response = await updateOrder(id, payload);\n      setOrders(response);\n    }\n  };\n  const deleteRow = async (id, isLocal) => {\n    if (isLocal) {\n      setOrders(orders.filter(order => order.id !== id));\n    } else {\n      const response = await deleteOrder(id);\n      setOrders(response);\n    }\n  };\n  const handleSortChange = (id, key, isSorted) => {\n    if (isSorted) {\n      setSortConfig({\n        key,\n        direction: 'ascending'\n      });\n    } else {\n      setSortConfig({\n        key,\n        direction: 'none'\n      });\n    }\n  };\n  const sortedOrders = React.useMemo(() => {\n    if (sortConfig.direction === 'none') {\n      return orders;\n    }\n    return [...orders].sort((a, b) => {\n      if (a[sortConfig.key] < b[sortConfig.key]) {\n        return sortConfig.direction === 'ascending' ? -1 : 1;\n      }\n      if (a[sortConfig.key] > b[sortConfig.key]) {\n        return sortConfig.direction === 'ascending' ? 1 : -1;\n      }\n      return 0;\n    });\n  }, [orders, sortConfig]);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              onClick: addRow,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: sortedOrders.map((order, index) => /*#__PURE__*/_jsxDEV(TableRowComponent, {\n          id: order.id,\n          data: {\n            ...order,\n            isNew: order.orderNumber === \"\"\n          },\n          onSave: saveRow,\n          onDelete: isLocal => deleteRow(order.id, isLocal),\n          onSortChange: handleSortChange\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackingStatus, \"kJCHNu38RYungs5HeVuZNeDY2LA=\");\n_c = TrackingStatus;\nexport default TrackingStatus;\nvar _c;\n$RefreshReg$(_c, \"TrackingStatus\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","nanoid","TableRowComponent","fetchOrders","createOrder","updateOrder","deleteOrder","jsxDEV","_jsxDEV","TrackingStatus","_s","columns","initialOrder","id","orderNumber","documentAmount","phoneNumber","fullName","costPrice","status","dateCreated","isNew","orders","setOrders","sortConfig","setSortConfig","key","direction","fetchData","fetchedOrders","addRow","saveRow","data","payload","response","deleteRow","isLocal","filter","order","handleSortChange","isSorted","sortedOrders","useMemo","sort","a","b","component","children","map","column","index","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onClick","onSave","onDelete","onSortChange","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/магазины/order_tracking/client/src/components/homePage/trackingStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport { nanoid } from 'nanoid';\r\nimport TableRowComponent from './TableRowComponent';\r\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\r\n\r\nconst TrackingStatus = () => {\r\n  const columns = [\r\n    \"Номер заказа\",\r\n    \"Статус\",\r\n    \"Дата отправки\",\r\n    \"Номер телефона\",\r\n    \"Сумма документа\",\r\n    \"Полное имя\",\r\n    \"Себестоимость\"\r\n  ];\r\n\r\n  const initialOrder = {\r\n    id: nanoid(),\r\n    orderNumber: \"\",\r\n    documentAmount: \"\",\r\n    phoneNumber: \"\",\r\n    fullName: \"\",\r\n    costPrice: \"\",\r\n    status: \"\",\r\n    dateCreated: \"\",\r\n    isNew: true\r\n  };\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [sortConfig, setSortConfig] = useState({ key: 'orderNumber', direction: 'ascending' });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const fetchedOrders = await fetchOrders();\r\n      setOrders(fetchedOrders);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const addRow = () => {\r\n    setOrders([...orders, { ...initialOrder }]);\r\n  };\r\n\r\n  const saveRow = async (data) => {\r\n    const { id, orderNumber, documentAmount, phoneNumber, fullName, costPrice, status, dateCreated, isNew } = data;\r\n    const payload = { id, orderNumber, documentAmount, phoneNumber, fullName, costPrice, status, dateCreated };\r\n\r\n    if (isNew) {\r\n      const response = await createOrder(payload);\r\n      setOrders(response);\r\n    } else {\r\n      const response = await updateOrder(id, payload);\r\n      setOrders(response);\r\n    }\r\n  };\r\n\r\n  const deleteRow = async (id, isLocal) => {\r\n    if (isLocal) {\r\n      setOrders(orders.filter(order => order.id !== id));\r\n    } else {\r\n      const response = await deleteOrder(id);\r\n      setOrders(response);\r\n    }\r\n  };\r\n\r\n  const handleSortChange = (id, key, isSorted) => {\r\n    if (isSorted) {\r\n      setSortConfig({ key, direction: 'ascending' });\r\n    } else {\r\n      setSortConfig({ key, direction: 'none' });\r\n    }\r\n  };\r\n\r\n  const sortedOrders = React.useMemo(() => {\r\n    if (sortConfig.direction === 'none') {\r\n      return orders;\r\n    }\r\n\r\n    return [...orders].sort((a, b) => {\r\n      if (a[sortConfig.key] < b[sortConfig.key]) {\r\n        return sortConfig.direction === 'ascending' ? -1 : 1;\r\n      }\r\n      if (a[sortConfig.key] > b[sortConfig.key]) {\r\n        return sortConfig.direction === 'ascending' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }, [orders, sortConfig]);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell key={index}>{column}</TableCell>\r\n            ))}\r\n            <TableCell>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={addRow}>\r\n                Добавить строку\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {sortedOrders.map((order, index) => (\r\n            <TableRowComponent\r\n              key={order.id}\r\n              id={order.id}\r\n              data={{ ...order, isNew: order.orderNumber === \"\" }}\r\n              onSave={saveRow}\r\n              onDelete={(isLocal) => deleteRow(order.id, isLocal)}\r\n              onSortChange={handleSortChange}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TrackingStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}