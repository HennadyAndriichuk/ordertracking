{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\\\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u044B\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\trackingStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport TableRowComponent from './TableRowComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackingStatus = () => {\n  _s();\n  const columns = [\"Номер заказа\", \"Сумма документа\", \"Номер телефона\", \"Полное имя\", \"Себестоимость\", \"Статус\", \"Дата отправки\"];\n  const [orders, setOrders] = useState([]);\n  const [orderNumbers, setOrderNumbers] = useState([]);\n  useEffect(() => {\n    setOrders([]);\n  }, []);\n  const addRow = () => {\n    setOrders([...orders, {\n      id: Date.now(),\n      data: Array(7).fill('')\n    }]);\n  };\n  const saveRow = (data, rowIndex) => {\n    const newOrders = [...orders];\n    newOrders[rowIndex].data = data;\n    setOrders(newOrders);\n    const newOrderNumbers = [...orderNumbers];\n    newOrderNumbers[rowIndex] = data[0]; // Предполагается, что первый элемент массива - это номер заказа\n    setOrderNumbers(newOrderNumbers);\n  };\n  const deleteRow = rowIndex => {\n    const newOrders = orders.filter((_, index) => index !== rowIndex);\n    setOrders(newOrders);\n    const newOrderNumbers = orderNumbers.filter((_, index) => index !== rowIndex);\n    setOrderNumbers(newOrderNumbers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: column\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                variant: \"contained\",\n                onClick: addRow,\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: orders.map((order, index) => /*#__PURE__*/_jsxDEV(TableRowComponent, {\n            data: order.data,\n            onSave: data => saveRow(data, index),\n            onDelete: () => deleteRow(index)\n          }, order.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u0432\\u0435\\u0434\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043D\\u043E\\u043C\\u0435\\u0440\\u0430 \\u043F\\u043E\\u0441\\u044B\\u043B\\u043E\\u043A:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: orderNumbers.map((number, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: number\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackingStatus, \"qWnLba9FQVaNo/vHv34GRoD6UFg=\");\n_c = TrackingStatus;\nexport default TrackingStatus;\nvar _c;\n$RefreshReg$(_c, \"TrackingStatus\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TableRowComponent","jsxDEV","_jsxDEV","TrackingStatus","_s","columns","orders","setOrders","orderNumbers","setOrderNumbers","addRow","id","Date","now","data","Array","fill","saveRow","rowIndex","newOrders","newOrderNumbers","deleteRow","filter","_","index","children","component","map","column","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onClick","order","onSave","onDelete","number","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/магазины/order_tracking/client/src/components/homePage/trackingStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport TableRowComponent from './TableRowComponent';\r\n\r\nconst TrackingStatus = () => {\r\n  const columns = [\r\n    \"Номер заказа\",\r\n    \"Сумма документа\",\r\n    \"Номер телефона\",\r\n    \"Полное имя\",\r\n    \"Себестоимость\",\r\n    \"Статус\",\r\n    \"Дата отправки\"\r\n  ];\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderNumbers, setOrderNumbers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setOrders([]);\r\n  }, []);\r\n\r\n  const addRow = () => {\r\n    setOrders([...orders, { id: Date.now(), data: Array(7).fill('') }]);\r\n  };\r\n\r\n  const saveRow = (data, rowIndex) => {\r\n    const newOrders = [...orders];\r\n    newOrders[rowIndex].data = data;\r\n    setOrders(newOrders);\r\n\r\n    const newOrderNumbers = [...orderNumbers];\r\n    newOrderNumbers[rowIndex] = data[0]; // Предполагается, что первый элемент массива - это номер заказа\r\n    setOrderNumbers(newOrderNumbers);\r\n  };\r\n\r\n  const deleteRow = (rowIndex) => {\r\n    const newOrders = orders.filter((_, index) => index !== rowIndex);\r\n    setOrders(newOrders);\r\n\r\n    const newOrderNumbers = orderNumbers.filter((_, index) => index !== rowIndex);\r\n    setOrderNumbers(newOrderNumbers);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column, index) => (\r\n                <TableCell key={index}>{column}</TableCell>\r\n              ))}\r\n              <TableCell>\r\n                <Button color=\"primary\" variant=\"contained\" onClick={addRow}>\r\n                  Добавить строку\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders.map((order, index) => (\r\n              <TableRowComponent\r\n                key={order.id}\r\n                data={order.data}\r\n                onSave={(data) => saveRow(data, index)}\r\n                onDelete={() => deleteRow(index)}\r\n              />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div>\r\n        <h2>Введенные номера посылок:</h2>\r\n        <ul>\r\n          {orderNumbers.map((number, index) => (\r\n            <li key={index}>{number}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrackingStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}