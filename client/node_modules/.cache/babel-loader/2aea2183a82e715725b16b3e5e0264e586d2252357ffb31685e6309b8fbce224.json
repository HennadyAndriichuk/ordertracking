{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\\\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u044B\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\TableRowComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TableRow, TableCell, Button } from '@mui/material';\nimport OrderNumberInput from './OrderNumberInput';\nimport OrderStatus from './OrderStatus';\nimport DateCreated from './DateCreated';\nimport PhoneNumberInput from './PhoneNumberInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableRowComponent = ({\n  id,\n  data,\n  onSave,\n  onDelete,\n  isNew\n}) => {\n  _s();\n  const [inputs, setInputs] = useState({\n    ...data,\n    isSorted: data.isSorted || false,\n    isStatusSorted: data.isStatusSorted || false,\n    isDateSorted: data.isDateSorted || false\n  });\n  const [showError, setShowError] = useState(false);\n  const [phoneError, setPhoneError] = useState(false);\n  useEffect(() => {\n    setInputs({\n      ...data,\n      isSorted: data.isSorted || false,\n      isStatusSorted: data.isStatusSorted || false,\n      isDateSorted: data.isDateSorted || false\n    });\n  }, [data]);\n  const handleInputChange = (key, value) => {\n    const newInputs = {\n      ...inputs,\n      [key]: value,\n      error: false,\n      isChanged: key !== \"isSorted\" && key !== \"isStatusSorted\" && key !== \"isDateSorted\"\n    };\n    setInputs(newInputs);\n  };\n  const handleSortChange = (key, isSorted) => {\n    handleInputChange(key, isSorted);\n  };\n  const handleSave = () => {\n    setShowError(true);\n    onSave(inputs);\n  };\n  const handleDelete = () => {\n    const isEmpty = Object.values(inputs).every(value => value === \"\" || value === false);\n    if (isEmpty) {\n      onDelete(true); // true означает, что нужно удалить локально\n    } else {\n      onDelete(false); // false означает, что нужно удалить с бэкенда\n    }\n  };\n  const handlePhoneError = hasError => {\n    setPhoneError(hasError);\n  };\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(OrderNumberInput, {\n        value: inputs.orderNumber,\n        onChange: value => handleInputChange(\"orderNumber\", value),\n        isSorted: inputs.isSorted,\n        onSortChange: isSorted => handleSortChange(\"isSorted\", isSorted),\n        showError: showError && (inputs.orderNumber.length !== 14 || !/^\\d+$/.test(inputs.orderNumber) || inputs.error === 'duplicate'),\n        errorMessage: inputs.error === 'duplicate' ? 'Номер заказа уже существует' : 'Номер должен быть целым положительным 14-значным числом'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, `orderNumber-${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(OrderStatus, {\n        status: inputs.status,\n        isSorted: inputs.isStatusSorted,\n        onSortChange: isSorted => handleSortChange(\"isStatusSorted\", isSorted)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, `status-${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(DateCreated, {\n        date: inputs.dateCreated,\n        isSorted: inputs.isDateSorted,\n        onSortChange: isSorted => handleSortChange(\"isDateSorted\", isSorted)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, `dateCreated-${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(PhoneNumberInput, {\n        value: inputs.phoneNumber,\n        onChange: value => handleInputChange(\"phoneNumber\", value),\n        onError: handlePhoneError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, `phoneNumber-${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        onClick: handleSave,\n        disabled: phoneError || !isNew && !inputs.isChanged,\n        children: isNew ? \"Записать\" : \"Обновить\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, `saveButton-${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        onClick: handleDelete,\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, `deleteButton-${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(TableRowComponent, \"NMmlEjjy1GzLzNEyzmwdICJ1COY=\");\n_c = TableRowComponent;\nexport default TableRowComponent;\nvar _c;\n$RefreshReg$(_c, \"TableRowComponent\");","map":{"version":3,"names":["React","useState","useEffect","TableRow","TableCell","Button","OrderNumberInput","OrderStatus","DateCreated","PhoneNumberInput","jsxDEV","_jsxDEV","TableRowComponent","id","data","onSave","onDelete","isNew","_s","inputs","setInputs","isSorted","isStatusSorted","isDateSorted","showError","setShowError","phoneError","setPhoneError","handleInputChange","key","value","newInputs","error","isChanged","handleSortChange","handleSave","handleDelete","isEmpty","Object","values","every","handlePhoneError","hasError","children","orderNumber","onChange","onSortChange","length","test","errorMessage","fileName","_jsxFileName","lineNumber","columnNumber","status","date","dateCreated","phoneNumber","onError","color","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/магазины/order_tracking/client/src/components/homePage/TableRowComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TableRow, TableCell, Button } from '@mui/material';\r\nimport OrderNumberInput from './OrderNumberInput';\r\nimport OrderStatus from './OrderStatus';\r\nimport DateCreated from './DateCreated';\r\nimport PhoneNumberInput from './PhoneNumberInput';\r\n\r\nconst TableRowComponent = ({ id, data, onSave, onDelete, isNew }) => {\r\n  const [inputs, setInputs] = useState({\r\n    ...data,\r\n    isSorted: data.isSorted || false,\r\n    isStatusSorted: data.isStatusSorted || false,\r\n    isDateSorted: data.isDateSorted || false\r\n  });\r\n  const [showError, setShowError] = useState(false);\r\n  const [phoneError, setPhoneError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setInputs({\r\n      ...data,\r\n      isSorted: data.isSorted || false,\r\n      isStatusSorted: data.isStatusSorted || false,\r\n      isDateSorted: data.isDateSorted || false\r\n    });\r\n  }, [data]);\r\n\r\n  const handleInputChange = (key, value) => {\r\n    const newInputs = { ...inputs, [key]: value, error: false, isChanged: key !== \"isSorted\" && key !== \"isStatusSorted\" && key !== \"isDateSorted\" };\r\n    setInputs(newInputs);\r\n  };\r\n\r\n  const handleSortChange = (key, isSorted) => {\r\n    handleInputChange(key, isSorted);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setShowError(true);\r\n    onSave(inputs);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    const isEmpty = Object.values(inputs).every(value => value === \"\" || value === false);\r\n    if (isEmpty) {\r\n      onDelete(true); // true означает, что нужно удалить локально\r\n    } else {\r\n      onDelete(false); // false означает, что нужно удалить с бэкенда\r\n    }\r\n  };\r\n\r\n  const handlePhoneError = (hasError) => {\r\n    setPhoneError(hasError);\r\n  };\r\n\r\n  return (\r\n    <TableRow key={id}>\r\n      <TableCell key={`orderNumber-${id}`}>\r\n        <OrderNumberInput\r\n          value={inputs.orderNumber}\r\n          onChange={(value) => handleInputChange(\"orderNumber\", value)}\r\n          isSorted={inputs.isSorted}\r\n          onSortChange={(isSorted) => handleSortChange(\"isSorted\", isSorted)}\r\n          showError={showError && (inputs.orderNumber.length !== 14 || !/^\\d+$/.test(inputs.orderNumber) || inputs.error === 'duplicate')}\r\n          errorMessage={inputs.error === 'duplicate' ? 'Номер заказа уже существует' : 'Номер должен быть целым положительным 14-значным числом'}\r\n        />\r\n      </TableCell>\r\n      <TableCell key={`status-${id}`}>\r\n        <OrderStatus\r\n          status={inputs.status}\r\n          isSorted={inputs.isStatusSorted}\r\n          onSortChange={(isSorted) => handleSortChange(\"isStatusSorted\", isSorted)}\r\n        />\r\n      </TableCell>\r\n      <TableCell key={`dateCreated-${id}`}>\r\n        <DateCreated\r\n          date={inputs.dateCreated}\r\n          isSorted={inputs.isDateSorted}\r\n          onSortChange={(isSorted) => handleSortChange(\"isDateSorted\", isSorted)}\r\n        />\r\n      </TableCell>\r\n      <TableCell key={`phoneNumber-${id}`}>\r\n        <PhoneNumberInput\r\n          value={inputs.phoneNumber}\r\n          onChange={(value) => handleInputChange(\"phoneNumber\", value)}\r\n          onError={handlePhoneError}\r\n        />\r\n      </TableCell>\r\n      <TableCell key={`saveButton-${id}`}>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={handleSave}\r\n          disabled={phoneError || (!isNew && !inputs.isChanged)}\r\n        >\r\n          {isNew ? \"Записать\" : \"Обновить\"}\r\n        </Button>\r\n      </TableCell>\r\n      <TableCell key={`deleteButton-${id}`}>\r\n        <Button color=\"secondary\" variant=\"contained\" onClick={handleDelete}>\r\n          Удалить\r\n        </Button>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableRowComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}