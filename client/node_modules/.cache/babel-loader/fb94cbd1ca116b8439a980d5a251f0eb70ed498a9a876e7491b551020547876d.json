{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\\\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u044B\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\trackingStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport TableRowComponent from './TableRowComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackingStatus = () => {\n  _s();\n  const columns = [\"Номер заказа\", \"Сумма документа\", \"Номер телефона\", \"Полное имя\", \"Себестоимость\", \"Статус\", \"Дата отправки\"];\n  const initialOrder = {\n    \"Номер заказа\": \"\",\n    \"Сумма документа\": \"\",\n    \"Номер телефона\": \"\",\n    \"Полное имя\": \"\",\n    \"Себестоимость\": \"\",\n    \"Статус\": \"\",\n    \"Дата отправки\": \"\"\n  };\n  const [orders, setOrders] = useState([{\n    id: nanoid(),\n    data: Object.values(initialOrder)\n  }]);\n  const isInitialMount = useRef(true);\n  useEffect(() => {\n    if (isInitialMount.current) {\n      console.log('Массив с объектами данных заказов:', orders);\n      isInitialMount.current = false;\n    }\n  }, [orders]);\n  const addRow = () => {\n    setOrders([...orders, {\n      id: nanoid(),\n      data: Object.values(initialOrder)\n    }]);\n  };\n  const saveRow = (data, isSorted, rowIndex) => {\n    const newOrders = [...orders];\n    newOrders[rowIndex].data = data;\n    setOrders(newOrders);\n\n    // Выводим номер посылки и статус сортировки в консоль\n    console.log(`Номер посылки (строка ${rowIndex + 1}): ${data[0]}`);\n    console.log(`Статус сортировки (строка ${rowIndex + 1}): ${isSorted}`);\n  };\n  const deleteRow = rowIndex => {\n    const newOrders = orders.filter((_, index) => index !== rowIndex);\n    setOrders(newOrders);\n  };\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              onClick: addRow,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: orders.map((order, index) => /*#__PURE__*/_jsxDEV(TableRowComponent, {\n          data: order.data,\n          onSave: (data, isSorted) => saveRow(data, isSorted, index),\n          onDelete: () => deleteRow(index)\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackingStatus, \"lzcHur+g3VIH6jOFkXC1o/uNIYk=\");\n_c = TrackingStatus;\nexport default TrackingStatus;\nvar _c;\n$RefreshReg$(_c, \"TrackingStatus\");","map":{"version":3,"names":["React","useState","useEffect","useRef","nanoid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TableRowComponent","jsxDEV","_jsxDEV","TrackingStatus","_s","columns","initialOrder","orders","setOrders","id","data","Object","values","isInitialMount","current","console","log","addRow","saveRow","isSorted","rowIndex","newOrders","deleteRow","filter","_","index","component","children","map","column","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onClick","order","onSave","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/магазины/order_tracking/client/src/components/homePage/trackingStatus.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport TableRowComponent from './TableRowComponent';\r\n\r\nconst TrackingStatus = () => {\r\n  const columns = [\r\n    \"Номер заказа\",\r\n    \"Сумма документа\",\r\n    \"Номер телефона\",\r\n    \"Полное имя\",\r\n    \"Себестоимость\",\r\n    \"Статус\",\r\n    \"Дата отправки\"\r\n  ];\r\n\r\n  const initialOrder = {\r\n    \"Номер заказа\": \"\",\r\n    \"Сумма документа\": \"\",\r\n    \"Номер телефона\": \"\",\r\n    \"Полное имя\": \"\",\r\n    \"Себестоимость\": \"\",\r\n    \"Статус\": \"\",\r\n    \"Дата отправки\": \"\"\r\n  };\r\n\r\n  const [orders, setOrders] = useState([{\r\n    id: nanoid(),\r\n    data: Object.values(initialOrder)\r\n  }]);\r\n\r\n  const isInitialMount = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (isInitialMount.current) {\r\n      console.log('Массив с объектами данных заказов:', orders);\r\n      isInitialMount.current = false;\r\n    }\r\n  }, [orders]);\r\n\r\n  const addRow = () => {\r\n    setOrders([...orders, { id: nanoid(), data: Object.values(initialOrder) }]);\r\n  };\r\n\r\n  const saveRow = (data, isSorted, rowIndex) => {\r\n    const newOrders = [...orders];\r\n    newOrders[rowIndex].data = data;\r\n    setOrders(newOrders);\r\n\r\n    // Выводим номер посылки и статус сортировки в консоль\r\n    console.log(`Номер посылки (строка ${rowIndex + 1}): ${data[0]}`);\r\n    console.log(`Статус сортировки (строка ${rowIndex + 1}): ${isSorted}`);\r\n  };\r\n\r\n  const deleteRow = (rowIndex) => {\r\n    const newOrders = orders.filter((_, index) => index !== rowIndex);\r\n    setOrders(newOrders);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell key={index}>{column}</TableCell>\r\n            ))}\r\n            <TableCell>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={addRow}>\r\n                Добавить строку\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders.map((order, index) => (\r\n            <TableRowComponent\r\n              key={order.id}\r\n              data={order.data}\r\n              onSave={(data, isSorted) => saveRow(data, isSorted, index)}\r\n              onDelete={() => deleteRow(index)}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TrackingStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}