{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\\\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u044B\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\trackingStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport { nanoid } from 'nanoid';\nimport TableRowComponent from './TableRowComponent';\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackingStatus = () => {\n  _s();\n  const columns = [\"Номер заказа\", \"Статус\", \"Дата отправки\", \"Номер телефона\", \"Сумма документа\", \"Полное имя\", \"Себестоимость\"];\n  const initialOrder = {\n    id: nanoid(),\n    orderNumber: \"\",\n    documentAmount: \"\",\n    phoneNumber: \"\",\n    fullName: \"\",\n    costPrice: \"\",\n    status: \"\",\n    dateCreated: \"\",\n    isNew: true\n  };\n  const [orders, setOrders] = useState([]);\n  const [sortCriteria, setSortCriteria] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchedOrders = await fetchOrders();\n      setOrders(fetchedOrders);\n    };\n    fetchData();\n  }, []);\n  const addRow = () => {\n    setOrders([...orders, {\n      ...initialOrder\n    }]);\n  };\n  const saveRow = async data => {\n    const {\n      id,\n      orderNumber,\n      documentAmount,\n      phoneNumber,\n      fullName,\n      costPrice,\n      status,\n      dateCreated,\n      isNew\n    } = data;\n    const payload = {\n      id,\n      orderNumber,\n      documentAmount,\n      phoneNumber,\n      fullName,\n      costPrice,\n      status,\n      dateCreated\n    };\n    if (isNew) {\n      const response = await createOrder(payload);\n      setOrders(response);\n    } else {\n      const response = await updateOrder(id, payload);\n      setOrders(response);\n    }\n  };\n  const deleteRow = async (id, isLocal) => {\n    if (isLocal) {\n      setOrders(orders.filter(order => order.id !== id));\n    } else {\n      const response = await deleteOrder(id);\n      setOrders(response);\n    }\n  };\n  const handleSortChange = (id, key, isSorted, sortKey, componentValue) => {\n    const newCriteria = isSorted ? [...sortCriteria, {\n      id,\n      key,\n      sortKey,\n      componentValue\n    }] : sortCriteria.filter(criterion => criterion.key !== key || criterion.id !== id);\n    setSortCriteria(newCriteria);\n    console.log('Current sort criteria:', newCriteria);\n    const updatedOrders = orders.map(order => order.id === id ? {\n      ...order,\n      [key]: isSorted\n    } : order);\n    setOrders(updatedOrders);\n  };\n\n  // Фильтрация массива orders на основе sortCriteria, исключая сортировочные ключи\n  const filteredOrders = orders.filter(order => sortCriteria.every(criterion => order[criterion.sortKey] === criterion.componentValue)).map(order => {\n    const {\n      isSorted,\n      isStatusSorted,\n      isDateSorted,\n      isAmountSorted,\n      isPhoneSorted,\n      isCostSorted,\n      isFullNameSorted,\n      ...filteredOrder\n    } = order;\n    return filteredOrder;\n  });\n\n  // Определение массива для рендеринга\n  const rowsToRender = sortCriteria.length > 0 ? filteredOrders : orders;\n\n  // Проверка и вывод отфильтрованного массива в консоль\n  useEffect(() => {\n    if (sortCriteria.length > 0) {\n      console.log('Filtered orders:', filteredOrders);\n    } else {\n      console.log('No sorting criteria applied.');\n    }\n  }, [sortCriteria, filteredOrders]);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              onClick: addRow,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rowsToRender.map((order, index) => /*#__PURE__*/_jsxDEV(TableRowComponent, {\n          id: order.id,\n          data: {\n            ...order,\n            isNew: order.orderNumber === \"\"\n          },\n          onSave: saveRow,\n          onDelete: isLocal => deleteRow(order.id, isLocal),\n          onSortChange: handleSortChange\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackingStatus, \"wjhnGr6zg7GIygyh7ZStyzlpUgs=\");\n_c = TrackingStatus;\nexport default TrackingStatus;\nvar _c;\n$RefreshReg$(_c, \"TrackingStatus\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","nanoid","TableRowComponent","fetchOrders","createOrder","updateOrder","deleteOrder","jsxDEV","_jsxDEV","TrackingStatus","_s","columns","initialOrder","id","orderNumber","documentAmount","phoneNumber","fullName","costPrice","status","dateCreated","isNew","orders","setOrders","sortCriteria","setSortCriteria","fetchData","fetchedOrders","addRow","saveRow","data","payload","response","deleteRow","isLocal","filter","order","handleSortChange","key","isSorted","sortKey","componentValue","newCriteria","criterion","console","log","updatedOrders","map","filteredOrders","every","isStatusSorted","isDateSorted","isAmountSorted","isPhoneSorted","isCostSorted","isFullNameSorted","filteredOrder","rowsToRender","length","component","children","column","index","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onClick","onSave","onDelete","onSortChange","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/магазины/order_tracking/client/src/components/homePage/trackingStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport { nanoid } from 'nanoid';\r\nimport TableRowComponent from './TableRowComponent';\r\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\r\n\r\nconst TrackingStatus = () => {\r\n  const columns = [\r\n    \"Номер заказа\",\r\n    \"Статус\",\r\n    \"Дата отправки\",\r\n    \"Номер телефона\",\r\n    \"Сумма документа\",\r\n    \"Полное имя\",\r\n    \"Себестоимость\"\r\n  ];\r\n\r\n  const initialOrder = {\r\n    id: nanoid(),\r\n    orderNumber: \"\",\r\n    documentAmount: \"\",\r\n    phoneNumber: \"\",\r\n    fullName: \"\",\r\n    costPrice: \"\",\r\n    status: \"\",\r\n    dateCreated: \"\",\r\n    isNew: true\r\n  };\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [sortCriteria, setSortCriteria] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const fetchedOrders = await fetchOrders();\r\n      setOrders(fetchedOrders);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const addRow = () => {\r\n    setOrders([...orders, { ...initialOrder }]);\r\n  };\r\n\r\n  const saveRow = async (data) => {\r\n    const { id, orderNumber, documentAmount, phoneNumber, fullName, costPrice, status, dateCreated, isNew } = data;\r\n    const payload = { id, orderNumber, documentAmount, phoneNumber, fullName, costPrice, status, dateCreated };\r\n\r\n    if (isNew) {\r\n      const response = await createOrder(payload);\r\n      setOrders(response);\r\n    } else {\r\n      const response = await updateOrder(id, payload);\r\n      setOrders(response);\r\n    }\r\n  };\r\n\r\n  const deleteRow = async (id, isLocal) => {\r\n    if (isLocal) {\r\n      setOrders(orders.filter(order => order.id !== id));\r\n    } else {\r\n      const response = await deleteOrder(id);\r\n      setOrders(response);\r\n    }\r\n  };\r\n\r\n  const handleSortChange = (id, key, isSorted, sortKey, componentValue) => {\r\n    const newCriteria = isSorted\r\n      ? [...sortCriteria, { id, key, sortKey, componentValue }]\r\n      : sortCriteria.filter(criterion => criterion.key !== key || criterion.id !== id);\r\n\r\n    setSortCriteria(newCriteria);\r\n    console.log('Current sort criteria:', newCriteria);\r\n    \r\n    const updatedOrders = orders.map(order => \r\n      order.id === id ? { ...order, [key]: isSorted } : order\r\n    );\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  // Фильтрация массива orders на основе sortCriteria, исключая сортировочные ключи\r\n  const filteredOrders = orders.filter(order => \r\n    sortCriteria.every(criterion => order[criterion.sortKey] === criterion.componentValue)\r\n  ).map(order => {\r\n    const { isSorted, isStatusSorted, isDateSorted, isAmountSorted, isPhoneSorted, isCostSorted, isFullNameSorted, ...filteredOrder } = order;\r\n    return filteredOrder;\r\n  });\r\n\r\n  // Определение массива для рендеринга\r\n  const rowsToRender = sortCriteria.length > 0 ? filteredOrders : orders;\r\n\r\n  // Проверка и вывод отфильтрованного массива в консоль\r\n  useEffect(() => {\r\n    if (sortCriteria.length > 0) {\r\n      console.log('Filtered orders:', filteredOrders);\r\n    } else {\r\n      console.log('No sorting criteria applied.');\r\n    }\r\n  }, [sortCriteria, filteredOrders]);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell key={index}>{column}</TableCell>\r\n            ))}\r\n            <TableCell>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={addRow}>\r\n                Добавить строку\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rowsToRender.map((order, index) => (\r\n            <TableRowComponent\r\n              key={order.id}\r\n              id={order.id}\r\n              data={{ ...order, isNew: order.orderNumber === \"\" }}\r\n              onSave={saveRow}\r\n              onDelete={(isLocal) => deleteRow(order.id, isLocal)}\r\n              onSortChange={handleSortChange}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TrackingStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}