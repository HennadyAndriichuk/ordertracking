{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\order_tracking\\\\client\\\\src\\\\components\\\\expensesPage\\\\ExpensesTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport { nanoid } from 'nanoid';\nimport ExpensesRowComponent from './ExpensesRowComponent';\nimport { fetchApi } from '../../utils/backendApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesTable = () => {\n  _s();\n  const columns = [\"Дата\", \"Реклама\", \"Затраты на возврат\", \"Затраты на брак\", \"Затраты на хостинг\", \"Другие затраты\"];\n  const initialCosts = {\n    id: nanoid(),\n    date: \"\",\n    advertising: \"\",\n    returnCosts: \"\",\n    defectCosts: \"\",\n    hostingCosts: \"\",\n    otherCosts: \"\",\n    isNew: true\n  };\n  const [costs, setCosts] = useState([]);\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const fetchExpensesUrl = \"http://localhost:4000/expenses\";\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchedCosts = await fetchApi(fetchExpensesUrl, 'GET');\n      setCosts(fetchedCosts);\n    };\n    fetchData();\n  }, []);\n  const addRow = () => {\n    setCosts([...costs, {\n      ...initialCosts,\n      isNew: true\n    }]);\n    console.log(costs);\n  };\n  const saveRow = useCallback(async data => {\n    const {\n      id,\n      date,\n      advertising,\n      returnCosts,\n      defectCosts,\n      hostingCosts,\n      otherCosts,\n      isNew\n    } = data;\n    const payload = {\n      id,\n      date,\n      advertising,\n      returnCosts,\n      defectCosts,\n      hostingCosts,\n      otherCosts\n    };\n    if (isNew) {\n      const response = await fetchApi(fetchExpensesUrl, 'POST', null, payload);\n      setCosts(response);\n    } else {\n      const response = await fetchApi(fetchExpensesUrl, 'PATCH', id, payload);\n      setCosts(response);\n    }\n  }, [setCosts]);\n  const deleteRow = useCallback(async (id, isLocal) => {\n    if (isLocal) {\n      setCosts(costs => costs.filter(cost => cost.id !== id));\n    } else {\n      const response = await fetchApi(fetchExpensesUrl, 'DELETE', id);\n      setCosts(response);\n    }\n  }, [setCosts]);\n  const filteredCosts = costs.filter(cost => {\n    const costDate = new Date(cost.date);\n    const isWithinDateRange = (!startDate || costDate >= new Date(startDate)) && (!endDate || costDate <= new Date(endDate));\n    return isWithinDateRange;\n  });\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [column, column === \"Дата\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: startDate,\n                onChange: e => setStartDate(e.target.value),\n                style: {\n                  display: \"block\",\n                  marginTop: \"8px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: endDate,\n                onChange: e => setEndDate(e.target.value),\n                style: {\n                  display: \"block\",\n                  marginTop: \"8px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this) : \"\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              onClick: addRow,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: filteredCosts.map(cost => /*#__PURE__*/_jsxDEV(ExpensesRowComponent, {\n          id: cost.id,\n          data: {\n            ...cost,\n            isNew: cost.isNew\n          },\n          onSave: saveRow,\n          onDelete: isLocal => deleteRow(cost.id, isLocal)\n        }, cost.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpensesTable, \"u6UOl8FQS/m0etvusVzMKhoUZlw=\");\n_c = ExpensesTable;\nexport default ExpensesTable;\nvar _c;\n$RefreshReg$(_c, \"ExpensesTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","nanoid","ExpensesRowComponent","fetchApi","jsxDEV","_jsxDEV","ExpensesTable","_s","columns","initialCosts","id","date","advertising","returnCosts","defectCosts","hostingCosts","otherCosts","isNew","costs","setCosts","startDate","setStartDate","endDate","setEndDate","fetchExpensesUrl","fetchData","fetchedCosts","addRow","console","log","saveRow","data","payload","response","deleteRow","isLocal","filter","cost","filteredCosts","costDate","Date","isWithinDateRange","component","children","map","column","index","style","display","flexDirection","alignItems","type","value","onChange","e","target","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onClick","onSave","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/order_tracking/client/src/components/expensesPage/ExpensesTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport { nanoid } from 'nanoid';\r\nimport ExpensesRowComponent from './ExpensesRowComponent';\r\nimport { fetchApi } from '../../utils/backendApi';\r\n\r\nconst ExpensesTable = () => {\r\n  const columns = [\"Дата\", \"Реклама\", \"Затраты на возврат\", \"Затраты на брак\", \"Затраты на хостинг\", \"Другие затраты\"];\r\n  const initialCosts = {\r\n    id: nanoid(),\r\n    date: \"\",\r\n    advertising: \"\",\r\n    returnCosts: \"\",\r\n    defectCosts: \"\",\r\n    hostingCosts: \"\", \r\n    otherCosts: \"\",\r\n    isNew: true\r\n  };\r\n\r\n  const [costs, setCosts] = useState([]);\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  const fetchExpensesUrl = \"http://localhost:4000/expenses\";\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const fetchedCosts = await fetchApi(fetchExpensesUrl, 'GET');\r\n      setCosts(fetchedCosts);\r\n    };\r\n  \r\n    fetchData();\r\n  }, []);\r\n  \r\n\r\n  const addRow = () => {\r\n    setCosts([...costs, { ...initialCosts, isNew: true }]);\r\n    console.log(costs);\r\n  };\r\n\r\n  const saveRow = useCallback(async (data) => {\r\n    const { id, date, advertising, returnCosts, defectCosts, hostingCosts, otherCosts, isNew } = data;\r\n    const payload = { id, date, advertising, returnCosts, defectCosts, hostingCosts, otherCosts };\r\n\r\n    if (isNew) {\r\n      const response = await fetchApi(fetchExpensesUrl, 'POST', null, payload);\r\n      setCosts(response);\r\n    } else {\r\n      const response = await fetchApi(fetchExpensesUrl, 'PATCH', id, payload);\r\n      setCosts(response);\r\n    }\r\n  }, [setCosts]);\r\n\r\n  const deleteRow = useCallback(async (id, isLocal) => {\r\n    if (isLocal) {\r\n      setCosts(costs => costs.filter(cost => cost.id !== id));\r\n    } else {\r\n      const response = await fetchApi(fetchExpensesUrl, 'DELETE', id);\r\n      setCosts(response);\r\n    }\r\n  }, [setCosts]);\r\n\r\n  const filteredCosts = costs.filter(cost => {\r\n    const costDate = new Date(cost.date);\r\n    const isWithinDateRange =\r\n    (!startDate || costDate >= new Date(startDate)) &&\r\n    (!endDate || costDate <= new Date(endDate));   \r\n    return (\r\n      isWithinDateRange \r\n    );\r\n  });\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell key={index}>{column}{column === \"Дата\" ? (\r\n                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={startDate}\r\n                    onChange={(e) => setStartDate(e.target.value)}\r\n                    style={{ display: \"block\", marginTop: \"8px\" }}\r\n                  />\r\n                  <input\r\n                    type=\"date\"\r\n                    value={endDate}\r\n                    onChange={(e) => setEndDate(e.target.value)}\r\n                    style={{ display: \"block\", marginTop: \"8px\" }}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}</TableCell>\r\n            ))}\r\n            <TableCell>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={addRow}>\r\n                Добавить строку\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {filteredCosts.map((cost) => (\r\n            <ExpensesRowComponent\r\n              key={cost.id}\r\n              id={cost.id}\r\n              data={{ ...cost, isNew: cost.isNew }}\r\n              onSave={saveRow}\r\n              onDelete={(isLocal) => deleteRow(cost.id, isLocal)}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default ExpensesTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}