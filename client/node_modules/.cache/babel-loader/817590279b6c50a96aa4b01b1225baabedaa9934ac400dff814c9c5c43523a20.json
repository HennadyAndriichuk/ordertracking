{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\TableRowComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { TableRow, TableCell, Button } from '@mui/material';\nimport OrderNumberInput from './OrderNumberInput';\nimport OrderStatus from './OrderStatus';\nimport DateCreated from './DateCreated';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buttonStyle = {\n  minWidth: '50px',\n  padding: '4px 8px'\n};\nconst TableRowComponent = ({\n  id,\n  data,\n  onSave,\n  onDelete,\n  onSortChange,\n  existingOrderNumbers,\n  checkedStatus\n}) => {\n  _s();\n  const [inputs, setInputs] = useState({\n    ...data,\n    isStatusSorted: data.isStatusSorted || false,\n    isDateSorted: data.isDateSorted || false\n  });\n  const [showError, setShowError] = useState(false);\n  const [duplicateError, setDuplicateError] = useState(false);\n  console.log(checkedStatus);\n  useEffect(() => {\n    setInputs({\n      ...data,\n      isStatusSorted: data.isStatusSorted || false,\n      isDateSorted: data.isDateSorted || false\n    });\n  }, [data]);\n  const handleInputChange = useCallback((key, value) => {\n    const newInputs = {\n      ...inputs,\n      [key]: value,\n      error: false,\n      isChanged: key !== \"isStatusSorted\" && key !== \"isDateSorted\"\n    };\n    setInputs(newInputs);\n    if (key === \"orderNumber\") {\n      setShowError(false);\n      setDuplicateError(false);\n    }\n  }, [inputs]);\n  const handleSortChange = useCallback((sortKey, isSorted, filterValue) => {\n    handleInputChange(sortKey, isSorted);\n    onSortChange(sortKey, isSorted, filterValue);\n  }, [handleInputChange, onSortChange]);\n  const handleSave = () => {\n    const {\n      orderNumber\n    } = inputs;\n    if (orderNumber.length !== 14 || !/^\\d+$/.test(orderNumber)) {\n      setShowError(true);\n      return;\n    }\n    if (existingOrderNumbers.includes(orderNumber) && orderNumber !== data.orderNumber) {\n      setDuplicateError(true);\n      return;\n    }\n    const {\n      id,\n      status,\n      dateCreated,\n      isNew\n    } = inputs;\n    const payload = {\n      id,\n      orderNumber,\n      status,\n      dateCreated,\n      isNew\n    };\n    onSave(payload);\n    setShowError(false);\n    setDuplicateError(false);\n  };\n  const handleDelete = () => {\n    const isEmpty = Object.values(inputs).every(value => value === \"\" || value === false);\n    if (isEmpty) {\n      onDelete(true);\n    } else {\n      onDelete(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(OrderNumberInput, {\n        value: inputs.orderNumber,\n        onChange: value => handleInputChange(\"orderNumber\", value),\n        showError: showError || duplicateError,\n        errorMessage: duplicateError ? 'Номер заказа уже существует' : 'Номер должен быть целым положительным 14-значным числом'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, `orderNumber-${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(OrderStatus, {\n        status: inputs.status,\n        isSorted: Boolean(inputs.isStatusSorted),\n        onSortChange: (isSorted, status) => handleSortChange(\"isStatusSorted\", isSorted, status)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, `status-${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(DateCreated, {\n        date: inputs.dateCreated,\n        isSorted: Boolean(inputs.isDateSorted),\n        onSortChange: (isSorted, date) => handleSortChange(\"isDateSorted\", isSorted, date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, `dateCreated-${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        onClick: handleSave,\n        disabled: !data.isNew && !inputs.isChanged,\n        style: buttonStyle,\n        children: data.isNew ? \"Записать\" : \"Обновить\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, `saveButton-${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        onClick: handleDelete,\n        style: buttonStyle,\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, `deleteButton-${id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(TableRowComponent, \"awaY6oPjlbT6tQia2CDJFHN6Kkk=\");\n_c = TableRowComponent;\nexport default TableRowComponent;\nvar _c;\n$RefreshReg$(_c, \"TableRowComponent\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","TableRow","TableCell","Button","OrderNumberInput","OrderStatus","DateCreated","jsxDEV","_jsxDEV","buttonStyle","minWidth","padding","TableRowComponent","id","data","onSave","onDelete","onSortChange","existingOrderNumbers","checkedStatus","_s","inputs","setInputs","isStatusSorted","isDateSorted","showError","setShowError","duplicateError","setDuplicateError","console","log","handleInputChange","key","value","newInputs","error","isChanged","handleSortChange","sortKey","isSorted","filterValue","handleSave","orderNumber","length","test","includes","status","dateCreated","isNew","payload","handleDelete","isEmpty","Object","values","every","children","onChange","errorMessage","fileName","_jsxFileName","lineNumber","columnNumber","Boolean","date","color","variant","onClick","disabled","style","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/order_tracking/client/src/components/homePage/TableRowComponent.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { TableRow, TableCell, Button } from '@mui/material';\r\nimport OrderNumberInput from './OrderNumberInput';\r\nimport OrderStatus from './OrderStatus';\r\nimport DateCreated from './DateCreated';\r\n\r\nconst buttonStyle = {\r\n  minWidth: '50px',\r\n  padding: '4px 8px'\r\n};\r\n\r\nconst TableRowComponent = ({ id, data, onSave, onDelete, onSortChange, existingOrderNumbers, checkedStatus }) => {\r\n  const [inputs, setInputs] = useState({\r\n    ...data,\r\n    isStatusSorted: data.isStatusSorted || false,\r\n    isDateSorted: data.isDateSorted || false\r\n  });\r\n  const [showError, setShowError] = useState(false);\r\n  const [duplicateError, setDuplicateError] = useState(false);\r\n  console.log(checkedStatus);\r\n\r\n  useEffect(() => {\r\n    setInputs({\r\n      ...data,\r\n      isStatusSorted: data.isStatusSorted || false,\r\n      isDateSorted: data.isDateSorted || false\r\n    });\r\n  }, [data]);\r\n\r\n  const handleInputChange = useCallback((key, value) => {\r\n    const newInputs = { ...inputs, [key]: value, error: false, isChanged: key !== \"isStatusSorted\" && key !== \"isDateSorted\" };\r\n    setInputs(newInputs);\r\n    if (key === \"orderNumber\") {\r\n      setShowError(false);\r\n      setDuplicateError(false);\r\n    }\r\n  }, [inputs]);\r\n\r\n  const handleSortChange = useCallback((sortKey, isSorted, filterValue) => {\r\n    handleInputChange(sortKey, isSorted);\r\n    onSortChange(sortKey, isSorted, filterValue);\r\n  }, [handleInputChange, onSortChange]);\r\n\r\n  const handleSave = () => {\r\n    const { orderNumber } = inputs;\r\n\r\n    if (orderNumber.length !== 14 || !/^\\d+$/.test(orderNumber)) {\r\n      setShowError(true);\r\n      return;\r\n    }\r\n\r\n    if (existingOrderNumbers.includes(orderNumber) && orderNumber !== data.orderNumber) {\r\n      setDuplicateError(true);\r\n      return;\r\n    }\r\n\r\n    const { id, status, dateCreated, isNew } = inputs;\r\n    const payload = { id, orderNumber, status, dateCreated, isNew };\r\n    onSave(payload);\r\n\r\n    setShowError(false);\r\n    setDuplicateError(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    const isEmpty = Object.values(inputs).every(value => value === \"\" || value === false);\r\n    if (isEmpty) {\r\n      onDelete(true);\r\n    } else {\r\n      onDelete(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableRow key={id}>\r\n      <TableCell key={`orderNumber-${id}`}>\r\n        <OrderNumberInput\r\n          value={inputs.orderNumber}\r\n          onChange={(value) => handleInputChange(\"orderNumber\", value)}\r\n          showError={showError || duplicateError}\r\n          errorMessage={duplicateError ? 'Номер заказа уже существует' : 'Номер должен быть целым положительным 14-значным числом'}\r\n        />\r\n      </TableCell>\r\n      <TableCell key={`status-${id}`}>\r\n        <OrderStatus\r\n          status={inputs.status}\r\n          isSorted={Boolean(inputs.isStatusSorted)}\r\n          onSortChange={(isSorted, status) => handleSortChange(\"isStatusSorted\", isSorted, status)}\r\n        />\r\n      </TableCell>\r\n      <TableCell key={`dateCreated-${id}`}>\r\n        <DateCreated\r\n          date={inputs.dateCreated}\r\n          isSorted={Boolean(inputs.isDateSorted)}\r\n          onSortChange={(isSorted, date) => handleSortChange(\"isDateSorted\", isSorted, date)}\r\n        />\r\n      </TableCell>\r\n      <TableCell key={`saveButton-${id}`}>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={handleSave}\r\n          disabled={!data.isNew && !inputs.isChanged}\r\n          style={buttonStyle}\r\n        >\r\n          {data.isNew ? \"Записать\" : \"Обновить\"}\r\n        </Button>\r\n      </TableCell>\r\n      <TableCell key={`deleteButton-${id}`}>\r\n        <Button color=\"secondary\" variant=\"contained\" onClick={handleDelete} style={buttonStyle}>\r\n          Удалить\r\n        </Button>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableRowComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}