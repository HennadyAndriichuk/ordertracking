{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\trackingStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport { nanoid } from 'nanoid';\nimport TableRowComponent from './TableRowComponent';\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackingStatus = () => {\n  _s();\n  const columns = [\"Номер заказа\", \"Статус\", \"Дата отправки\", \"Сумма документа\"];\n  const initialOrder = {\n    id: nanoid(),\n    orderNumber: \"\",\n    status: \"\",\n    dateCreated: \"\",\n    documentSum: \"\",\n    isNew: true,\n    checkedStatuses: {\n      isStatusChecked: false,\n      isDateCreatedChecked: false,\n      isDocumentSumChecked: false\n    }\n  };\n  const [orders, setOrders] = useState([]);\n  const [filterStatus, setFilterStatus] = useState(\"\"); // Состояние для фильтрации по статусу\n  const [filterDate, setFilterDate] = useState(\"\"); // Состояние для фильтрации по дате\n  const [filterDocumentSum, setFilterDocumentSum] = useState(\"\"); // Состояние для фильтрации по сумме документа\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchedOrders = await fetchOrders();\n      setOrders(fetchedOrders.map(order => ({\n        ...order,\n        checkedStatuses: order.checkedStatuses || {\n          isStatusChecked: false,\n          isDateCreatedChecked: false,\n          isDocumentSumChecked: false\n        }\n      })));\n    };\n    fetchData();\n  }, []);\n  const existingOrderNumbers = useMemo(() => orders.map(order => order.orderNumber), [orders]);\n  const addRow = () => {\n    setOrders([...orders, {\n      ...initialOrder,\n      isNew: true,\n      checkedStatuses: {\n        isStatusChecked: false,\n        isDateCreatedChecked: false,\n        isDocumentSumChecked: false\n      }\n    }]);\n  };\n  const saveRow = useCallback(async data => {\n    const {\n      id,\n      orderNumber,\n      status,\n      dateCreated,\n      documentSum,\n      isNew\n    } = data;\n    const payload = {\n      id,\n      orderNumber,\n      status,\n      dateCreated,\n      documentSum\n    };\n    if (isNew) {\n      const response = await createOrder(payload);\n      setOrders(response);\n    } else {\n      const response = await updateOrder(id, payload);\n      setOrders(response);\n    }\n  }, [setOrders]);\n  const deleteRow = useCallback(async (id, isLocal) => {\n    if (isLocal) {\n      setOrders(orders => orders.filter(order => order.id !== id));\n    } else {\n      const response = await deleteOrder(id);\n      setOrders(response);\n    }\n  }, [setOrders]);\n  const handleSortChange = (sortKey, isSorted, filterValue, id) => {\n    setOrders(orders.map(order => order.id === id ? {\n      ...order,\n      checkedStatuses: {\n        ...order.checkedStatuses,\n        [sortKey]: isSorted\n      }\n    } : order));\n    if (sortKey === \"isStatusChecked\" && isSorted) {\n      setFilterStatus(filterValue);\n    } else if (sortKey === \"isDateCreatedChecked\" && isSorted) {\n      setFilterDate(filterValue);\n    } else if (sortKey === \"isDocumentSumChecked\" && isSorted) {\n      setFilterDocumentSum(filterValue);\n    } else {\n      setFilterStatus(\"\");\n      setFilterDate(\"\");\n      setFilterDocumentSum(\"\");\n    }\n  };\n\n  // Фильтрация заказов на основе filterStatus и filterDate\n  const filteredOrders = orders.filter(order => {\n    return (!filterStatus || order.status === filterStatus) && (!filterDate || order.dateCreated === filterDate) && (!filterDocumentSum || order.documentSum === filterDocumentSum);\n  });\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              onClick: addRow,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: filteredOrders.map(order => /*#__PURE__*/_jsxDEV(TableRowComponent, {\n          id: order.id,\n          data: {\n            ...order,\n            isNew: order.isNew\n          },\n          existingOrderNumbers: existingOrderNumbers,\n          onSave: saveRow,\n          onDelete: isLocal => deleteRow(order.id, isLocal),\n          onSortChange: handleSortChange\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackingStatus, \"OjHN/9W9tQrZN0f4r1ctuZk4/Nw=\");\n_c = TrackingStatus;\nexport default TrackingStatus;\nvar _c;\n$RefreshReg$(_c, \"TrackingStatus\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","nanoid","TableRowComponent","fetchOrders","createOrder","updateOrder","deleteOrder","jsxDEV","_jsxDEV","TrackingStatus","_s","columns","initialOrder","id","orderNumber","status","dateCreated","documentSum","isNew","checkedStatuses","isStatusChecked","isDateCreatedChecked","isDocumentSumChecked","orders","setOrders","filterStatus","setFilterStatus","filterDate","setFilterDate","filterDocumentSum","setFilterDocumentSum","fetchData","fetchedOrders","map","order","existingOrderNumbers","addRow","saveRow","data","payload","response","deleteRow","isLocal","filter","handleSortChange","sortKey","isSorted","filterValue","filteredOrders","component","children","column","index","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onClick","onSave","onDelete","onSortChange","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/order_tracking/client/src/components/homePage/trackingStatus.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport { nanoid } from 'nanoid';\r\nimport TableRowComponent from './TableRowComponent';\r\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\r\n\r\nconst TrackingStatus = () => {\r\n  const columns = [\"Номер заказа\", \"Статус\", \"Дата отправки\", \"Сумма документа\"];\r\n  const initialOrder = {\r\n    id: nanoid(),\r\n    orderNumber: \"\",\r\n    status: \"\",\r\n    dateCreated: \"\",\r\n    documentSum: \"\",\r\n    isNew: true,\r\n    checkedStatuses: {\r\n      isStatusChecked: false,\r\n      isDateCreatedChecked: false,\r\n      isDocumentSumChecked: false\r\n    }\r\n  };\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [filterStatus, setFilterStatus] = useState(\"\"); // Состояние для фильтрации по статусу\r\n  const [filterDate, setFilterDate] = useState(\"\"); // Состояние для фильтрации по дате\r\n  const [filterDocumentSum, setFilterDocumentSum] = useState(\"\"); // Состояние для фильтрации по сумме документа\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const fetchedOrders = await fetchOrders();\r\n      setOrders(fetchedOrders.map(order => ({\r\n        ...order,\r\n        checkedStatuses: order.checkedStatuses || { isStatusChecked: false, isDateCreatedChecked: false, isDocumentSumChecked: false }\r\n      })));\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const existingOrderNumbers = useMemo(() => orders.map(order => order.orderNumber), [orders]);\r\n\r\n  const addRow = () => {\r\n    setOrders([...orders, { ...initialOrder, isNew: true, checkedStatuses: { isStatusChecked: false, isDateCreatedChecked: false, isDocumentSumChecked: false } }]);\r\n  };\r\n\r\n  const saveRow = useCallback(async (data) => {\r\n    const { id, orderNumber, status, dateCreated, documentSum, isNew } = data;\r\n    const payload = { id, orderNumber, status, dateCreated, documentSum };\r\n\r\n    if (isNew) {\r\n      const response = await createOrder(payload);\r\n      setOrders(response);\r\n    } else {\r\n      const response = await updateOrder(id, payload);\r\n      setOrders(response);\r\n    }\r\n  }, [setOrders]);\r\n\r\n  const deleteRow = useCallback(async (id, isLocal) => {\r\n    if (isLocal) {\r\n      setOrders(orders => orders.filter(order => order.id !== id));\r\n    } else {\r\n      const response = await deleteOrder(id);\r\n      setOrders(response);\r\n    }\r\n  }, [setOrders]);\r\n\r\n  const handleSortChange = (sortKey, isSorted, filterValue, id) => {\r\n    setOrders(orders.map(order => \r\n      order.id === id ? { ...order, checkedStatuses: { ...order.checkedStatuses, [sortKey]: isSorted } } : order\r\n    ));\r\n\r\n    if (sortKey === \"isStatusChecked\" && isSorted) {\r\n      setFilterStatus(filterValue);\r\n    } else if (sortKey === \"isDateCreatedChecked\" && isSorted) {\r\n      setFilterDate(filterValue);\r\n    }else if (sortKey === \"isDocumentSumChecked\" && isSorted) {\r\n      setFilterDocumentSum(filterValue);\r\n    } else {\r\n      setFilterStatus(\"\");\r\n      setFilterDate(\"\");\r\n      setFilterDocumentSum(\"\");\r\n    }\r\n  };\r\n\r\n  // Фильтрация заказов на основе filterStatus и filterDate\r\n  const filteredOrders = orders.filter(order => {\r\n    return (!filterStatus || order.status === filterStatus) &&\r\n           (!filterDate || order.dateCreated === filterDate)&&\r\n           (!filterDocumentSum || order.documentSum === filterDocumentSum);\r\n  });\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell key={index}>{column}</TableCell>\r\n            ))}\r\n            <TableCell>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={addRow}>\r\n                Добавить строку\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {filteredOrders.map((order) => (\r\n            <TableRowComponent\r\n              key={order.id}\r\n              id={order.id}\r\n              data={{ ...order, isNew: order.isNew }}\r\n              existingOrderNumbers={existingOrderNumbers}\r\n              onSave={saveRow}\r\n              onDelete={(isLocal) => deleteRow(order.id, isLocal)}\r\n              onSortChange={handleSortChange}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TrackingStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}