{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\\\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u044B\\\\order_tracking\\\\client\\\\src\\\\components\\\\trackingStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Button, Checkbox } from '@mui/material';\nimport InputMask from 'react-input-mask';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TrackingStatus = () => {\n  _s();\n  const initialOrder = {\n    id: null,\n    Number: '',\n    DateCreated: '',\n    Status: '',\n    DocumentCost: '',\n    PhoneRecipient: '',\n    RecipientFullName: '',\n    CostOfGoods: '',\n    checked: {\n      Number: false,\n      DocumentCost: false,\n      PhoneRecipient: false,\n      RecipientFullName: false,\n      CostOfGoods: false\n    }\n  };\n  const [orders, setOrders] = useState([initialOrder]);\n  const [errors, setErrors] = useState({});\n  const [phoneErrors, setPhoneErrors] = useState({});\n  const [costErrors, setCostErrors] = useState({});\n  const [nameErrors, setNameErrors] = useState({});\n  const [costOfGoodsErrors, setCostOfGoodsErrors] = useState({});\n  const fetchOrderDetails = async trackingNumber => {\n    try {\n      const response = await axios.post('https://api.novaposhta.ua/v2.0/json/', {\n        apiKey: 'a3e0146033929135960600cd27f26325',\n        modelName: 'TrackingDocument',\n        calledMethod: 'getStatusDocuments',\n        methodProperties: {\n          Documents: [{\n            DocumentNumber: trackingNumber,\n            Phone: ''\n          }]\n        }\n      });\n      if (response.data.data && response.data.data.length > 0) {\n        const data = response.data.data[0];\n        return {\n          DateCreated: data.DateCreated,\n          Status: data.Status\n        };\n      } else {\n        console.error('No data found for the given tracking number');\n        return {};\n      }\n    } catch (error) {\n      console.error('Error fetching order details:', error);\n      return {};\n    }\n  };\n  const updateOrderDetails = useCallback(async order => {\n    if (order.Number) {\n      const data = await fetchOrderDetails(order.Number);\n      return {\n        ...order,\n        ...data\n      };\n    }\n    return order;\n  }, []);\n  const fetchAndUpdateOrders = useCallback(async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/orders');\n      console.log('Fetched Orders:', response.data);\n      const ordersWithIds = response.data.map(order => ({\n        ...order\n      }));\n      const updatedOrders = await Promise.all(ordersWithIds.map(order => updateOrderDetails(order)));\n      setOrders(updatedOrders);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n    }\n  }, [updateOrderDetails]);\n  useEffect(() => {\n    fetchAndUpdateOrders();\n  }, [fetchAndUpdateOrders]);\n  const handleNumberChange = (id, value) => {\n    const updatedOrders = orders.map(order => order.id === id ? {\n      ...order,\n      Number: value\n    } : order);\n    const error = value.length !== 14 && value.length > 0 ? 'Введите 14-значный номер' : '';\n    setErrors({\n      ...errors,\n      [id]: error\n    });\n    setOrders(updatedOrders);\n  };\n  const handlePhoneChange = (id, value) => {\n    const updatedOrders = orders.map(order => order.id === id ? {\n      ...order,\n      PhoneRecipient: value\n    } : order);\n    const error = /^\\+380\\d{9}$/.test(value.replace(/\\s/g, '')) ? '' : 'Введите корректный номер';\n    setPhoneErrors({\n      ...phoneErrors,\n      [id]: error\n    });\n    setOrders(updatedOrders);\n  };\n  const handleCostChange = (id, value) => {\n    const updatedOrders = orders.map(order => order.id === id ? {\n      ...order,\n      DocumentCost: value\n    } : order);\n    const error = /^\\d+$/.test(value) ? '' : 'Введите корректную сумму';\n    setCostErrors({\n      ...costErrors,\n      [id]: error\n    });\n    setOrders(updatedOrders);\n  };\n  const handleNameChange = (id, value) => {\n    const updatedOrders = orders.map(order => order.id === id ? {\n      ...order,\n      RecipientFullName: value\n    } : order);\n    const error = /^[a-zA-Zа-яА-ЯёЁ\\s]+$/.test(value) ? '' : 'Имя не должно содержать цифры';\n    setNameErrors({\n      ...nameErrors,\n      [id]: error\n    });\n    setOrders(updatedOrders);\n  };\n  const handleCostOfGoodsChange = (id, value) => {\n    const updatedOrders = orders.map(order => order.id === id ? {\n      ...order,\n      CostOfGoods: value\n    } : order);\n    const error = /^\\d+$/.test(value) ? '' : 'Введите корректную себестоимость';\n    setCostOfGoodsErrors({\n      ...costOfGoodsErrors,\n      [id]: error\n    });\n    setOrders(updatedOrders);\n  };\n  const handleCheckboxChange = (id, field) => {\n    const updatedOrders = orders.map(order => order.id === id ? {\n      ...order,\n      checked: {\n        ...order.checked,\n        [field]: !order.checked[field]\n      }\n    } : order);\n    setOrders(updatedOrders);\n  };\n  const addOrder = () => {\n    setOrders([...orders, {\n      ...initialOrder,\n      id: Date.now()\n    }]);\n  };\n  const removeOrder = async id => {\n    try {\n      await axios.delete(`http://localhost:4000/orders/${id}`);\n      setOrders(orders.filter(order => order.id !== id));\n    } catch (error) {\n      console.error('Error deleting order:', error);\n    }\n  };\n  const handleSaveOrUpdate = async id => {\n    const order = orders.find(order => order.id === id);\n    console.log('Updated Order:', order);\n    if (!order.id) {\n      try {\n        const response = await axios.post('http://localhost:4000/orders', order);\n        console.log('Order saved:', response.data);\n        await fetchAndUpdateOrders();\n      } catch (error) {\n        console.error('Error saving order:', error);\n      }\n    } else {\n      try {\n        await axios.patch(`http://localhost:4000/orders/${id}`, order);\n        console.log('Order updated');\n        await fetchAndUpdateOrders();\n      } catch (error) {\n        console.error('Error updating order:', error);\n      }\n    }\n  };\n  const isButtonDisabled = id => {\n    return errors[id] || phoneErrors[id] || costErrors[id] || nameErrors[id] || costOfGoodsErrors[id];\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        marginBottom: '150px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0415\\u041D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u0421\\u0443\\u043C\\u043C\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u0418\\u043C\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u0421\\u0435\\u0431\\u0435\\u0441\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u0414\\u0430\\u0442\\u0430 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: addOrder,\n                variant: \"contained\",\n                color: \"primary\",\n                style: {\n                  width: '100px'\n                },\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: order.checked.Number,\n                onChange: () => handleCheckboxChange(order.id, 'Number')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: order.Number,\n                onChange: e => handleNumberChange(order.id, e.target.value),\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u043C\\u0435\\u0440\",\n                error: !!errors[order.id],\n                helperText: errors[order.id]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: order.checked.DocumentCost,\n                onChange: () => handleCheckboxChange(order.id, 'DocumentCost')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: order.DocumentCost,\n                onChange: e => handleCostChange(order.id, e.target.value),\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0443\\u043C\\u043C\\u0443\",\n                error: !!costErrors[order.id],\n                helperText: costErrors[order.id]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: order.checked.PhoneRecipient,\n                onChange: () => handleCheckboxChange(order.id, 'PhoneRecipient')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n                mask: \"+380 99 999 99 99\",\n                value: order.PhoneRecipient,\n                onChange: e => handlePhoneChange(order.id, e.target.value),\n                children: inputProps => /*#__PURE__*/_jsxDEV(TextField, {\n                  ...inputProps,\n                  placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n                  error: !!phoneErrors[order.id],\n                  helperText: phoneErrors[order.id]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: order.checked.RecipientFullName,\n                onChange: () => handleCheckboxChange(order.id, 'RecipientFullName')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: order.RecipientFullName,\n                onChange: e => handleNameChange(order.id, e.target.value),\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\",\n                error: !!nameErrors[order.id],\n                helperText: nameErrors[order.id]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: order.checked.CostOfGoods,\n                onChange: () => handleCheckboxChange(order.id, 'CostOfGoods')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                value: order.CostOfGoods,\n                onChange: e => handleCostOfGoodsChange(order.id, e.target.value),\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0435\\u0431\\u0435\\u0441\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\",\n                error: !!costOfGoodsErrors[order.id],\n                helperText: costOfGoodsErrors[order.id]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: order.DateCreated || '',\n                placeholder: \"-\",\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                value: order.Status || '',\n                placeholder: \"-\",\n                InputProps: {\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleSaveOrUpdate(order.id),\n                variant: \"contained\",\n                color: \"primary\",\n                style: {\n                  width: '100px'\n                },\n                disabled: isButtonDisabled(order.id),\n                children: order.id ? 'Обновить' : 'Записать'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), order.id && /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => removeOrder(order.id),\n                variant: \"contained\",\n                color: \"secondary\",\n                style: {\n                  width: '100px'\n                },\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this)]\n          }, order.id || 'new', true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TrackingStatus, \"ldnh5Wkh6Zu58gC5FX2No2otXNs=\");\n_c = TrackingStatus;\nexport default TrackingStatus;\nvar _c;\n$RefreshReg$(_c, \"TrackingStatus\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","Button","Checkbox","InputMask","jsxDEV","_jsxDEV","Fragment","_Fragment","TrackingStatus","_s","initialOrder","id","Number","DateCreated","Status","DocumentCost","PhoneRecipient","RecipientFullName","CostOfGoods","checked","orders","setOrders","errors","setErrors","phoneErrors","setPhoneErrors","costErrors","setCostErrors","nameErrors","setNameErrors","costOfGoodsErrors","setCostOfGoodsErrors","fetchOrderDetails","trackingNumber","response","post","apiKey","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","data","length","console","error","updateOrderDetails","order","fetchAndUpdateOrders","get","log","ordersWithIds","map","updatedOrders","Promise","all","handleNumberChange","value","handlePhoneChange","test","replace","handleCostChange","handleNameChange","handleCostOfGoodsChange","handleCheckboxChange","field","addOrder","Date","now","removeOrder","delete","filter","handleSaveOrUpdate","find","patch","isButtonDisabled","children","component","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","color","width","onChange","e","target","placeholder","helperText","mask","inputProps","InputProps","readOnly","disabled","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/магазины/order_tracking/client/src/components/trackingStatus.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Button, Checkbox } from '@mui/material';\r\nimport InputMask from 'react-input-mask';\r\n\r\nconst TrackingStatus = () => {\r\n  const initialOrder = {\r\n    id: null,\r\n    Number: '',\r\n    DateCreated: '',\r\n    Status: '',\r\n    DocumentCost: '',\r\n    PhoneRecipient: '',\r\n    RecipientFullName: '',\r\n    CostOfGoods: '',\r\n    checked: {\r\n      Number: false,\r\n      DocumentCost: false,\r\n      PhoneRecipient: false,\r\n      RecipientFullName: false,\r\n      CostOfGoods: false,\r\n    },\r\n  };\r\n\r\n  const [orders, setOrders] = useState([initialOrder]);\r\n  const [errors, setErrors] = useState({});\r\n  const [phoneErrors, setPhoneErrors] = useState({});\r\n  const [costErrors, setCostErrors] = useState({});\r\n  const [nameErrors, setNameErrors] = useState({});\r\n  const [costOfGoodsErrors, setCostOfGoodsErrors] = useState({});\r\n\r\n  const fetchOrderDetails = async (trackingNumber) => {\r\n    try {\r\n      const response = await axios.post('https://api.novaposhta.ua/v2.0/json/', {\r\n        apiKey: 'a3e0146033929135960600cd27f26325',\r\n        modelName: 'TrackingDocument',\r\n        calledMethod: 'getStatusDocuments',\r\n        methodProperties: {\r\n          Documents: [\r\n            {\r\n              DocumentNumber: trackingNumber,\r\n              Phone: '',\r\n            },\r\n          ],\r\n        },\r\n      });\r\n\r\n      if (response.data.data && response.data.data.length > 0) {\r\n        const data = response.data.data[0];\r\n        return {\r\n          DateCreated: data.DateCreated,\r\n          Status: data.Status,\r\n        };\r\n      } else {\r\n        console.error('No data found for the given tracking number');\r\n        return {};\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching order details:', error);\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const updateOrderDetails = useCallback(async (order) => {\r\n    if (order.Number) {\r\n      const data = await fetchOrderDetails(order.Number);\r\n      return { ...order, ...data };\r\n    }\r\n    return order;\r\n  }, []);\r\n\r\n  const fetchAndUpdateOrders = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:4000/orders');\r\n      console.log('Fetched Orders:', response.data);\r\n      const ordersWithIds = response.data.map(order => ({ ...order }));\r\n      const updatedOrders = await Promise.all(\r\n        ordersWithIds.map(order => updateOrderDetails(order))\r\n      );\r\n      setOrders(updatedOrders);\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n    }\r\n  }, [updateOrderDetails]);\r\n\r\n  useEffect(() => {\r\n    fetchAndUpdateOrders();\r\n  }, [fetchAndUpdateOrders]);\r\n\r\n  const handleNumberChange = (id, value) => {\r\n    const updatedOrders = orders.map((order) =>\r\n      order.id === id ? { ...order, Number: value } : order\r\n    );\r\n\r\n    const error = value.length !== 14 && value.length > 0 ? 'Введите 14-значный номер' : '';\r\n\r\n    setErrors({ ...errors, [id]: error });\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  const handlePhoneChange = (id, value) => {\r\n    const updatedOrders = orders.map((order) =>\r\n      order.id === id ? { ...order, PhoneRecipient: value } : order\r\n    );\r\n\r\n    const error = /^\\+380\\d{9}$/.test(value.replace(/\\s/g, '')) ? '' : 'Введите корректный номер';\r\n\r\n    setPhoneErrors({ ...phoneErrors, [id]: error });\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  const handleCostChange = (id, value) => {\r\n    const updatedOrders = orders.map((order) =>\r\n      order.id === id ? { ...order, DocumentCost: value } : order\r\n    );\r\n\r\n    const error = /^\\d+$/.test(value) ? '' : 'Введите корректную сумму';\r\n\r\n    setCostErrors({ ...costErrors, [id]: error });\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  const handleNameChange = (id, value) => {\r\n    const updatedOrders = orders.map((order) =>\r\n      order.id === id ? { ...order, RecipientFullName: value } : order\r\n    );\r\n\r\n    const error = /^[a-zA-Zа-яА-ЯёЁ\\s]+$/.test(value) ? '' : 'Имя не должно содержать цифры';\r\n\r\n    setNameErrors({ ...nameErrors, [id]: error });\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  const handleCostOfGoodsChange = (id, value) => {\r\n    const updatedOrders = orders.map((order) =>\r\n      order.id === id ? { ...order, CostOfGoods: value } : order\r\n    );\r\n\r\n    const error = /^\\d+$/.test(value) ? '' : 'Введите корректную себестоимость';\r\n\r\n    setCostOfGoodsErrors({ ...costOfGoodsErrors, [id]: error });\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  const handleCheckboxChange = (id, field) => {\r\n    const updatedOrders = orders.map((order) =>\r\n      order.id === id ? { ...order, checked: { ...order.checked, [field]: !order.checked[field] } } : order\r\n    );\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  const addOrder = () => {\r\n    setOrders([\r\n      ...orders,\r\n      { ...initialOrder, id: Date.now() },\r\n    ]);\r\n  };\r\n\r\n  const removeOrder = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:4000/orders/${id}`);\r\n      setOrders(orders.filter((order) => order.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting order:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveOrUpdate = async (id) => {\r\n    const order = orders.find(order => order.id === id);\r\n    console.log('Updated Order:', order);\r\n\r\n    if (!order.id) {\r\n      try {\r\n        const response = await axios.post('http://localhost:4000/orders', order);\r\n        console.log('Order saved:', response.data);\r\n        await fetchAndUpdateOrders();\r\n      } catch (error) {\r\n        console.error('Error saving order:', error);\r\n      }\r\n    } else {\r\n      try {\r\n        await axios.patch(`http://localhost:4000/orders/${id}`, order);\r\n        console.log('Order updated');\r\n        await fetchAndUpdateOrders();\r\n      } catch (error) {\r\n        console.error('Error updating order:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const isButtonDisabled = (id) => {\r\n    return errors[id] || phoneErrors[id] || costErrors[id] || nameErrors[id] || costOfGoodsErrors[id];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper} style={{ marginBottom: '150px' }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Номер ЕН</TableCell>\r\n              <TableCell>Сумма</TableCell>\r\n              <TableCell>Номер телефона</TableCell>\r\n              <TableCell>Имя</TableCell>\r\n              <TableCell>Себестоимость</TableCell>\r\n              <TableCell>Дата отправки</TableCell>\r\n              <TableCell>Статус отправки</TableCell>\r\n              <TableCell>\r\n                <Button onClick={addOrder} variant=\"contained\" color=\"primary\" style={{ width: '100px' }}>\r\n                  Добавить\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders.map((order) => (\r\n              <TableRow key={order.id || 'new'}>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={order.checked.Number}\r\n                    onChange={() => handleCheckboxChange(order.id, 'Number')}\r\n                  />\r\n                  <TextField\r\n                    value={order.Number}\r\n                    onChange={(e) => handleNumberChange(order.id, e.target.value)}\r\n                    placeholder=\"Введите номер\"\r\n                    error={!!errors[order.id]}\r\n                    helperText={errors[order.id]}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={order.checked.DocumentCost}\r\n                    onChange={() => handleCheckboxChange(order.id, 'DocumentCost')}\r\n                  />\r\n                  <TextField\r\n                    value={order.DocumentCost}\r\n                    onChange={(e) => handleCostChange(order.id, e.target.value)}\r\n                    placeholder=\"Введите сумму\"\r\n                    error={!!costErrors[order.id]}\r\n                    helperText={costErrors[order.id]}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={order.checked.PhoneRecipient}\r\n                    onChange={() => handleCheckboxChange(order.id, 'PhoneRecipient')}\r\n                  />\r\n                  <InputMask\r\n                    mask=\"+380 99 999 99 99\"\r\n                    value={order.PhoneRecipient}\r\n                    onChange={(e) => handlePhoneChange(order.id, e.target.value)}\r\n                  >\r\n                    {(inputProps) => (\r\n                      <TextField\r\n                        {...inputProps}\r\n                        placeholder=\"Введите номер телефона\"\r\n                        error={!!phoneErrors[order.id]}\r\n                        helperText={phoneErrors[order.id]}\r\n                      />\r\n                    )}\r\n                  </InputMask>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={order.checked.RecipientFullName}\r\n                    onChange={() => handleCheckboxChange(order.id, 'RecipientFullName')}\r\n                  />\r\n                  <TextField\r\n                    value={order.RecipientFullName}\r\n                    onChange={(e) => handleNameChange(order.id, e.target.value)}\r\n                    placeholder=\"Введите имя\"\r\n                    error={!!nameErrors[order.id]}\r\n                    helperText={nameErrors[order.id]}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Checkbox\r\n                    checked={order.checked.CostOfGoods}\r\n                    onChange={() => handleCheckboxChange(order.id, 'CostOfGoods')}\r\n                  />\r\n                  <TextField\r\n                    value={order.CostOfGoods}\r\n                    onChange={(e) => handleCostOfGoodsChange(order.id, e.target.value)}\r\n                    placeholder=\"Введите себестоимость\"\r\n                    error={!!costOfGoodsErrors[order.id]}\r\n                    helperText={costOfGoodsErrors[order.id]}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    value={order.DateCreated || ''}\r\n                    placeholder=\"-\"\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <TextField\r\n                    value={order.Status || ''}\r\n                    placeholder=\"-\"\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    onClick={() => handleSaveOrUpdate(order.id)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ width: '100px' }}\r\n                    disabled={isButtonDisabled(order.id)}\r\n                  >\r\n                    {order.id ? 'Обновить' : 'Записать'}\r\n                  </Button>\r\n                </TableCell>\r\n                {order.id && (\r\n                  <TableCell>\r\n                    <Button onClick={() => removeOrder(order.id)} variant=\"contained\" color=\"secondary\" style={{ width: '100px' }}>\r\n                      Удалить\r\n                    </Button>\r\n                  </TableCell>\r\n                )}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrackingStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}