{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\\\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u044B\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\trackingStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Button } from '@mui/material';\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackingStatus = () => {\n  _s();\n  const initialOrder = useMemo(() => ({\n    id: null,\n    Number: '',\n    DateCreated: '',\n    Status: '',\n    DocumentCost: '',\n    PhoneRecipient: '',\n    RecipientFullName: '',\n    CostOfGoods: ''\n  }), []);\n  const [orders, setOrders] = useState([initialOrder]);\n\n  // Определение функции внутри компонента\n  const fetchAndUpdateOrders = async () => {\n    try {\n      const data = await fetchOrders();\n      const ordersWithIds = data.map(order => ({\n        ...initialOrder,\n        ...order\n      }));\n      setOrders(ordersWithIds);\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAndUpdateOrders();\n  }, [initialOrder]);\n  const handleInputChange = (id, field, value) => {\n    const updatedOrders = orders.map(order => order.id === id ? {\n      ...order,\n      [field]: value\n    } : order);\n    setOrders(updatedOrders);\n  };\n  const addOrder = () => {\n    setOrders([...orders, {\n      ...initialOrder,\n      id: Date.now()\n    }]);\n  };\n  const removeOrder = async id => {\n    try {\n      await deleteOrder(id);\n      setOrders(orders.filter(order => order.id !== id));\n    } catch (error) {\n      console.error('Error deleting order:', error);\n    }\n  };\n  const handleSaveOrUpdate = async id => {\n    const order = orders.find(order => order.id === id);\n    if (!order.id) {\n      try {\n        const savedOrder = await createOrder(order);\n        console.log('Order saved:', savedOrder);\n      } catch (error) {\n        console.error('Error saving order:', error);\n      }\n    } else {\n      try {\n        await updateOrder(id, order);\n        console.log('Order updated');\n      } catch (error) {\n        console.error('Error updating order:', error);\n      }\n    }\n    fetchAndUpdateOrders(); // Refresh the list of orders\n  };\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    style: {\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [Object.keys(initialOrder).map((key, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: key\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [Object.keys(initialOrder).map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              value: order[key],\n              onChange: e => handleInputChange(order.id, key, e.target.value),\n              type: \"text\",\n              disabled: key === 'id'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, `${order.id}-${key}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleSaveOrUpdate(order.id),\n              color: \"primary\",\n              variant: \"contained\",\n              children: order.id ? 'Update' : 'Save'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), order.id && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => removeOrder(order.id),\n              color: \"secondary\",\n              variant: \"contained\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, order.id || 'new', true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: addOrder,\n      color: \"primary\",\n      variant: \"contained\",\n      children: \"Add New Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackingStatus, \"SDdfB+wnoyfgq6+Om4bon8yinbI=\");\n_c = TrackingStatus;\nexport default TrackingStatus;\nvar _c;\n$RefreshReg$(_c, \"TrackingStatus\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","Button","fetchOrders","createOrder","updateOrder","deleteOrder","jsxDEV","_jsxDEV","TrackingStatus","_s","initialOrder","id","Number","DateCreated","Status","DocumentCost","PhoneRecipient","RecipientFullName","CostOfGoods","orders","setOrders","fetchAndUpdateOrders","data","ordersWithIds","map","order","error","console","handleInputChange","field","value","updatedOrders","addOrder","Date","now","removeOrder","filter","handleSaveOrUpdate","find","savedOrder","log","component","style","marginBottom","children","Object","keys","key","index","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","type","disabled","onClick","color","variant","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/магазины/order_tracking/client/src/components/homePage/trackingStatus.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField, Button } from '@mui/material';\r\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\r\n\r\nconst TrackingStatus = () => {\r\n  const initialOrder = useMemo(() => ({\r\n    id: null,\r\n    Number: '',\r\n    DateCreated: '',\r\n    Status: '',\r\n    DocumentCost: '',\r\n    PhoneRecipient: '',\r\n    RecipientFullName: '',\r\n    CostOfGoods: '',\r\n  }), []);\r\n\r\n  const [orders, setOrders] = useState([initialOrder]);\r\n\r\n  // Определение функции внутри компонента\r\n  const fetchAndUpdateOrders = async () => {\r\n    try {\r\n      const data = await fetchOrders();\r\n      const ordersWithIds = data.map(order => ({ ...initialOrder, ...order }));\r\n      setOrders(ordersWithIds);\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAndUpdateOrders();\r\n  }, [initialOrder]);\r\n\r\n  const handleInputChange = (id, field, value) => {\r\n    const updatedOrders = orders.map(order =>\r\n      order.id === id ? { ...order, [field]: value } : order\r\n    );\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  const addOrder = () => {\r\n    setOrders([...orders, { ...initialOrder, id: Date.now() }]);\r\n  };\r\n\r\n  const removeOrder = async (id) => {\r\n    try {\r\n      await deleteOrder(id);\r\n      setOrders(orders.filter(order => order.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting order:', error);\r\n    }\r\n  };\r\n\r\n  const handleSaveOrUpdate = async (id) => {\r\n    const order = orders.find(order => order.id === id);\r\n    if (!order.id) {\r\n      try {\r\n        const savedOrder = await createOrder(order);\r\n        console.log('Order saved:', savedOrder);\r\n      } catch (error) {\r\n        console.error('Error saving order:', error);\r\n      }\r\n    } else {\r\n      try {\r\n        await updateOrder(id, order);\r\n        console.log('Order updated');\r\n      } catch (error) {\r\n        console.error('Error updating order:', error);\r\n      }\r\n    }\r\n    fetchAndUpdateOrders();  // Refresh the list of orders\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginBottom: '20px' }}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {Object.keys(initialOrder).map((key, index) => (\r\n              <TableCell key={index}>{key}</TableCell>\r\n            ))}\r\n            <TableCell>Actions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders.map((order) => (\r\n            <TableRow key={order.id || 'new'}>\r\n              {Object.keys(initialOrder).map((key) => (\r\n                <TableCell key={`${order.id}-${key}`}>\r\n                  <TextField\r\n                    value={order[key]}\r\n                    onChange={e => handleInputChange(order.id, key, e.target.value)}\r\n                    type=\"text\"\r\n                    disabled={key === 'id'}\r\n                  />\r\n                </TableCell>\r\n              ))}\r\n              <TableCell>\r\n                <Button onClick={() => handleSaveOrUpdate(order.id)} color=\"primary\" variant=\"contained\">\r\n                  {order.id ? 'Update' : 'Save'}\r\n                </Button>\r\n                {order.id && (\r\n                  <Button onClick={() => removeOrder(order.id)} color=\"secondary\" variant=\"contained\">\r\n                    Delete\r\n                  </Button>\r\n                )}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <Button onClick={addOrder} color=\"primary\" variant=\"contained\">\r\n        Add New Order\r\n      </Button>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TrackingStatus;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAC1H,SAASC,WAAW,EAAEC,WAAW,EAAEC,WAAW,EAAEC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5F,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,YAAY,GAAGlB,OAAO,CAAC,OAAO;IAClCmB,EAAE,EAAE,IAAI;IACRC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,EAAE;IAClBC,iBAAiB,EAAE,EAAE;IACrBC,WAAW,EAAE;EACf,CAAC,CAAC,EAAE,EAAE,CAAC;EAEP,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG9B,QAAQ,CAAC,CAACoB,YAAY,CAAC,CAAC;;EAEpD;EACA,MAAMW,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMpB,WAAW,CAAC,CAAC;MAChC,MAAMqB,aAAa,GAAGD,IAAI,CAACE,GAAG,CAACC,KAAK,KAAK;QAAE,GAAGf,YAAY;QAAE,GAAGe;MAAM,CAAC,CAAC,CAAC;MACxEL,SAAS,CAACG,aAAa,CAAC;IAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAEDnC,SAAS,CAAC,MAAM;IACd8B,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACX,YAAY,CAAC,CAAC;EAElB,MAAMkB,iBAAiB,GAAGA,CAACjB,EAAE,EAAEkB,KAAK,EAAEC,KAAK,KAAK;IAC9C,MAAMC,aAAa,GAAGZ,MAAM,CAACK,GAAG,CAACC,KAAK,IACpCA,KAAK,CAACd,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGc,KAAK;MAAE,CAACI,KAAK,GAAGC;IAAM,CAAC,GAAGL,KACnD,CAAC;IACDL,SAAS,CAACW,aAAa,CAAC;EAC1B,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrBZ,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;MAAE,GAAGT,YAAY;MAAEC,EAAE,EAAEsB,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMC,WAAW,GAAG,MAAOxB,EAAE,IAAK;IAChC,IAAI;MACF,MAAMN,WAAW,CAACM,EAAE,CAAC;MACrBS,SAAS,CAACD,MAAM,CAACiB,MAAM,CAACX,KAAK,IAAIA,KAAK,CAACd,EAAE,KAAKA,EAAE,CAAC,CAAC;IACpD,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMW,kBAAkB,GAAG,MAAO1B,EAAE,IAAK;IACvC,MAAMc,KAAK,GAAGN,MAAM,CAACmB,IAAI,CAACb,KAAK,IAAIA,KAAK,CAACd,EAAE,KAAKA,EAAE,CAAC;IACnD,IAAI,CAACc,KAAK,CAACd,EAAE,EAAE;MACb,IAAI;QACF,MAAM4B,UAAU,GAAG,MAAMpC,WAAW,CAACsB,KAAK,CAAC;QAC3CE,OAAO,CAACa,GAAG,CAAC,cAAc,EAAED,UAAU,CAAC;MACzC,CAAC,CAAC,OAAOb,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF,CAAC,MAAM;MACL,IAAI;QACF,MAAMtB,WAAW,CAACO,EAAE,EAAEc,KAAK,CAAC;QAC5BE,OAAO,CAACa,GAAG,CAAC,eAAe,CAAC;MAC9B,CAAC,CAAC,OAAOd,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;IACAL,oBAAoB,CAAC,CAAC,CAAC,CAAE;EAC3B,CAAC;EAED,oBACEd,OAAA,CAACX,cAAc;IAAC6C,SAAS,EAAE1C,KAAM;IAAC2C,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAChErC,OAAA,CAACd,KAAK;MAAAmD,QAAA,gBACJrC,OAAA,CAACV,SAAS;QAAA+C,QAAA,eACRrC,OAAA,CAACT,QAAQ;UAAA8C,QAAA,GACNC,MAAM,CAACC,IAAI,CAACpC,YAAY,CAAC,CAACc,GAAG,CAAC,CAACuB,GAAG,EAAEC,KAAK,kBACxCzC,OAAA,CAACZ,SAAS;YAAAiD,QAAA,EAAcG;UAAG,GAAXC,KAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAkB,CACxC,CAAC,eACF7C,OAAA,CAACZ,SAAS;YAAAiD,QAAA,EAAC;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACZ7C,OAAA,CAACb,SAAS;QAAAkD,QAAA,EACPzB,MAAM,CAACK,GAAG,CAAEC,KAAK,iBAChBlB,OAAA,CAACT,QAAQ;UAAA8C,QAAA,GACNC,MAAM,CAACC,IAAI,CAACpC,YAAY,CAAC,CAACc,GAAG,CAAEuB,GAAG,iBACjCxC,OAAA,CAACZ,SAAS;YAAAiD,QAAA,eACRrC,OAAA,CAACP,SAAS;cACR8B,KAAK,EAAEL,KAAK,CAACsB,GAAG,CAAE;cAClBM,QAAQ,EAAEC,CAAC,IAAI1B,iBAAiB,CAACH,KAAK,CAACd,EAAE,EAAEoC,GAAG,EAAEO,CAAC,CAACC,MAAM,CAACzB,KAAK,CAAE;cAChE0B,IAAI,EAAC,MAAM;cACXC,QAAQ,EAAEV,GAAG,KAAK;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB;UAAC,GANY,GAAG3B,KAAK,CAACd,EAAE,IAAIoC,GAAG,EAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOzB,CACZ,CAAC,eACF7C,OAAA,CAACZ,SAAS;YAAAiD,QAAA,gBACRrC,OAAA,CAACN,MAAM;cAACyD,OAAO,EAAEA,CAAA,KAAMrB,kBAAkB,CAACZ,KAAK,CAACd,EAAE,CAAE;cAACgD,KAAK,EAAC,SAAS;cAACC,OAAO,EAAC,WAAW;cAAAhB,QAAA,EACrFnB,KAAK,CAACd,EAAE,GAAG,QAAQ,GAAG;YAAM;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC,EACR3B,KAAK,CAACd,EAAE,iBACPJ,OAAA,CAACN,MAAM;cAACyD,OAAO,EAAEA,CAAA,KAAMvB,WAAW,CAACV,KAAK,CAACd,EAAE,CAAE;cAACgD,KAAK,EAAC,WAAW;cAACC,OAAO,EAAC,WAAW;cAAAhB,QAAA,EAAC;YAEpF;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA,GApBC3B,KAAK,CAACd,EAAE,IAAI,KAAK;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqBtB,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACR7C,OAAA,CAACN,MAAM;MAACyD,OAAO,EAAE1B,QAAS;MAAC2B,KAAK,EAAC,SAAS;MAACC,OAAO,EAAC,WAAW;MAAAhB,QAAA,EAAC;IAE/D;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAErB,CAAC;AAAC3C,EAAA,CAhHID,cAAc;AAAAqD,EAAA,GAAdrD,cAAc;AAkHpB,eAAeA,cAAc;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}