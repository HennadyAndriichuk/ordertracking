{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\trackingStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addSortCriteria } from '../../store/sortCriteriaSlice';\nimport TableRowComponent from './TableRowComponent';\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackingStatus = () => {\n  _s();\n  const columns = [\"Номер заказа\", \"Статус\", \"Дата отправки\"];\n  const initialOrder = {\n    id: nanoid(),\n    orderNumber: \"\",\n    status: \"\",\n    dateCreated: \"\",\n    isNew: true\n  };\n  const [orders, setOrders] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchedOrders = await fetchOrders();\n      setOrders(fetchedOrders);\n    };\n    fetchData();\n  }, []);\n  const existingOrderNumbers = useMemo(() => orders.map(order => order.orderNumber), [orders]);\n  const addRow = () => {\n    setOrders([...orders, {\n      ...initialOrder,\n      isNew: true\n    }]);\n  };\n  const saveRow = useCallback(async data => {\n    const {\n      id,\n      orderNumber,\n      status,\n      dateCreated,\n      isNew\n    } = data;\n    const payload = {\n      id,\n      orderNumber,\n      status,\n      dateCreated\n    };\n    if (isNew) {\n      const response = await createOrder(payload);\n      setOrders(response);\n    } else {\n      const response = await updateOrder(id, payload);\n      setOrders(response);\n    }\n  }, [setOrders]);\n  const deleteRow = useCallback(async (id, isLocal) => {\n    if (isLocal) {\n      setOrders(orders => orders.filter(order => order.id !== id));\n    } else {\n      const response = await deleteOrder(id);\n      setOrders(response);\n    }\n  }, [setOrders]);\n  const handleSortChange = useCallback((id, sortKey, isSorted, componentValue, renderKey) => {\n    dispatch(addSortCriteria({\n      id,\n      sortKey,\n      isSorted,\n      componentValue,\n      renderKey\n    }));\n  }, [dispatch]);\n  const sortCriteria = useSelector(state => state.sortCriteria);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              onClick: addRow,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(TableRowComponent, {\n          id: order.id,\n          data: {\n            ...order,\n            isNew: order.isNew\n          },\n          existingOrderNumbers: existingOrderNumbers,\n          onSave: saveRow,\n          onDelete: isLocal => deleteRow(order.id, isLocal),\n          onSortChange: handleSortChange\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackingStatus, \"MmdT3zKBRl5OFGVO7V5o0t2zdSo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TrackingStatus;\nexport default TrackingStatus;\nvar _c;\n$RefreshReg$(_c, \"TrackingStatus\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","nanoid","useDispatch","useSelector","addSortCriteria","TableRowComponent","fetchOrders","createOrder","updateOrder","deleteOrder","jsxDEV","_jsxDEV","TrackingStatus","_s","columns","initialOrder","id","orderNumber","status","dateCreated","isNew","orders","setOrders","dispatch","fetchData","fetchedOrders","existingOrderNumbers","map","order","addRow","saveRow","data","payload","response","deleteRow","isLocal","filter","handleSortChange","sortKey","isSorted","componentValue","renderKey","sortCriteria","state","component","children","column","index","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onClick","onSave","onDelete","onSortChange","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/order_tracking/client/src/components/homePage/trackingStatus.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport { nanoid } from 'nanoid';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addSortCriteria } from '../../store/sortCriteriaSlice';\r\nimport TableRowComponent from './TableRowComponent';\r\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\r\n\r\nconst TrackingStatus = () => {\r\n  const columns = [\"Номер заказа\", \"Статус\", \"Дата отправки\"];\r\n  const initialOrder = {\r\n    id: nanoid(),\r\n    orderNumber: \"\",\r\n    status: \"\",\r\n    dateCreated: \"\",\r\n    isNew: true\r\n  };\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const fetchedOrders = await fetchOrders();\r\n      setOrders(fetchedOrders);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const existingOrderNumbers = useMemo(() => orders.map(order => order.orderNumber), [orders]);\r\n\r\n  const addRow = () => {\r\n    setOrders([...orders, { ...initialOrder, isNew: true }]);\r\n  };\r\n\r\n  const saveRow = useCallback(async (data) => {\r\n    const { id, orderNumber, status, dateCreated, isNew } = data;\r\n    const payload = { id, orderNumber, status, dateCreated };\r\n\r\n    if (isNew) {\r\n      const response = await createOrder(payload);\r\n      setOrders(response);\r\n    } else {\r\n      const response = await updateOrder(id, payload);\r\n      setOrders(response);\r\n    }\r\n  }, [setOrders]);\r\n\r\n  const deleteRow = useCallback(async (id, isLocal) => {\r\n    if (isLocal) {\r\n      setOrders(orders => orders.filter(order => order.id !== id));\r\n    } else {\r\n      const response = await deleteOrder(id);\r\n      setOrders(response);\r\n    }\r\n  }, [setOrders]);\r\n\r\n  const handleSortChange = useCallback((id, sortKey, isSorted, componentValue, renderKey) => {\r\n    dispatch(addSortCriteria({ id, sortKey, isSorted, componentValue, renderKey }));\r\n  }, [dispatch]);\r\n\r\n  const sortCriteria = useSelector(state => state.sortCriteria);\r\n\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell key={index}>{column}</TableCell>\r\n            ))}\r\n            <TableCell>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={addRow}>\r\n                Добавить строку\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders.map((order) => (\r\n            <TableRowComponent\r\n              key={order.id}\r\n              id={order.id}\r\n              data={{ ...order, isNew: order.isNew }}\r\n              existingOrderNumbers={existingOrderNumbers}\r\n              onSave={saveRow}\r\n              onDelete={(isLocal) => deleteRow(order.id, isLocal)}\r\n              onSortChange={handleSortChange} \r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TrackingStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}