{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\order_tracking\\\\client\\\\src\\\\components\\\\expensesPage\\\\ExpenseDate.js\";\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport format from 'date-fns/format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseDate = ({\n  value,\n  onChange,\n  showError,\n  errorMessage\n}) => {\n  const handleChange = newValue => {\n    // Преобразуем объект Date в строку формата YYYY-MM-DD\n    const formattedDate = newValue ? format(newValue, 'yyyy-MM-dd') : '';\n    onChange(formattedDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDateFns,\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        value: value ? new Date(value) : null // Преобразуем строку в Date\n        ,\n        onChange: handleChange,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          variant: \"outlined\",\n          size: \"small\",\n          fullWidth: true,\n          error: showError,\n          helperText: showError ? errorMessage : '',\n          style: {\n            width: '140px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpenseDate;\nexport default ExpenseDate;\nvar _c;\n$RefreshReg$(_c, \"ExpenseDate\");","map":{"version":3,"names":["React","TextField","DatePicker","LocalizationProvider","AdapterDateFns","format","jsxDEV","_jsxDEV","ExpenseDate","value","onChange","showError","errorMessage","handleChange","newValue","formattedDate","children","dateAdapter","Date","renderInput","params","variant","size","fullWidth","error","helperText","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/order_tracking/client/src/components/expensesPage/ExpenseDate.js"],"sourcesContent":["import React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport format from 'date-fns/format';\r\n\r\nconst ExpenseDate = ({ value, onChange, showError, errorMessage }) => {\r\n  const handleChange = (newValue) => {\r\n    // Преобразуем объект Date в строку формата YYYY-MM-DD\r\n    const formattedDate = newValue ? format(newValue, 'yyyy-MM-dd') : '';\r\n    onChange(formattedDate);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <DatePicker\r\n          value={value ? new Date(value) : null} // Преобразуем строку в Date\r\n          onChange={handleChange}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              error={showError}\r\n              helperText={showError ? errorMessage : ''}\r\n              style={{ width: '140px' }}\r\n            />\r\n          )}\r\n        />\r\n      </LocalizationProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,SAASC,oBAAoB,QAAQ,0CAA0C;AAC/E,SAASC,cAAc,QAAQ,oCAAoC;AACnE,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,SAAS;EAAEC;AAAa,CAAC,KAAK;EACpE,MAAMC,YAAY,GAAIC,QAAQ,IAAK;IACjC;IACA,MAAMC,aAAa,GAAGD,QAAQ,GAAGT,MAAM,CAACS,QAAQ,EAAE,YAAY,CAAC,GAAG,EAAE;IACpEJ,QAAQ,CAACK,aAAa,CAAC;EACzB,CAAC;EAED,oBACER,OAAA;IAAAS,QAAA,eACET,OAAA,CAACJ,oBAAoB;MAACc,WAAW,EAAEb,cAAe;MAAAY,QAAA,eAChDT,OAAA,CAACL,UAAU;QACTO,KAAK,EAAEA,KAAK,GAAG,IAAIS,IAAI,CAACT,KAAK,CAAC,GAAG,IAAK,CAAC;QAAA;QACvCC,QAAQ,EAAEG,YAAa;QACvBM,WAAW,EAAGC,MAAM,iBAClBb,OAAA,CAACN,SAAS;UAAA,GACJmB,MAAM;UACVC,OAAO,EAAC,UAAU;UAClBC,IAAI,EAAC,OAAO;UACZC,SAAS;UACTC,KAAK,EAAEb,SAAU;UACjBc,UAAU,EAAEd,SAAS,GAAGC,YAAY,GAAG,EAAG;UAC1Cc,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACkB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAACC,EAAA,GA5BIxB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}