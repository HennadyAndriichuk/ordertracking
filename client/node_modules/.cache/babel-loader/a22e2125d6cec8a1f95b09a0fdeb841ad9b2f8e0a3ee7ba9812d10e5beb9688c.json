{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\DateCreated.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateCreated = ({\n  date\n}) => {\n  cobsole.log(date);\n  const displayDate = date ? new Date(date) : null;\n  console.log(displayDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayDate ? `${displayDate.getDate()}-${displayDate.getMonth() + 1}-${displayDate.getFullYear()}` : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = DateCreated;\nexport default DateCreated;\nvar _c;\n$RefreshReg$(_c, \"DateCreated\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DateCreated","date","cobsole","log","displayDate","Date","console","children","getDate","getMonth","getFullYear","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/order_tracking/client/src/components/homePage/DateCreated.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst DateCreated = ({ date }) => {\r\n  cobsole.log(date)\r\n\r\n  const displayDate = date ? new Date(date) : null;\r\n  console.log(displayDate);\r\n  \r\n  return (\r\n    <div>\r\n      {displayDate \r\n          ? `${displayDate.getDate()}-${displayDate.getMonth() + 1}-${displayDate.getFullYear()}`\r\n          : ''}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateCreated;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEjB,MAAMG,WAAW,GAAGH,IAAI,GAAG,IAAII,IAAI,CAACJ,IAAI,CAAC,GAAG,IAAI;EAChDK,OAAO,CAACH,GAAG,CAACC,WAAW,CAAC;EAExB,oBACEL,OAAA;IAAAQ,QAAA,EACGH,WAAW,GACN,GAAGA,WAAW,CAACI,OAAO,CAAC,CAAC,IAAIJ,WAAW,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAIL,WAAW,CAACM,WAAW,CAAC,CAAC,EAAE,GACrF;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACC,EAAA,GAbIf,WAAW;AAejB,eAAeA,WAAW;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}