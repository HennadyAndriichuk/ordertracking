{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\order_tracking\\\\client\\\\src\\\\components\\\\setDateRange.js\";\nimport React, { useState, useEffect } from 'react';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetDateRange = (handleSetDateRange, handleResetDates) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: tempStartDate,\n        onChange: e => setTempStartDate(e.target.value),\n        style: {\n          display: \"block\",\n          marginTop: \"8px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: tempEndDate,\n        onChange: e => setTempEndDate(e.target.value),\n        style: {\n          display: \"block\",\n          marginTop: \"8px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [!startDate && !endDate && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSetDateRange,\n        disabled: !tempStartDate || !tempEndDate // Кнопка активна только при выборе обеих дат\n        ,\n        style: {\n          marginTop: '8px',\n          height: '40px',\n          // Высота кнопки\n          width: '60px',\n          // Ширина кнопки\n          fontSize: '12px' // Размер шрифта внутри кнопки\n        },\n        children: [\"Set\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 18\n        }, this), \" dates\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: handleResetDates,\n        style: {\n          marginTop: '8px',\n          height: '40px',\n          // Высота кнопки\n          width: '60px',\n          // Ширина кнопки\n          fontSize: '12px' // Размер шрифта внутри кнопки\n        },\n        children: /*#__PURE__*/_jsxDEV(ClearIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n_c = SetDateRange;\nexport default SetDateRange;\nvar _c;\n$RefreshReg$(_c, \"SetDateRange\");","map":{"version":3,"names":["React","useState","useEffect","ClearIcon","jsxDEV","_jsxDEV","SetDateRange","handleSetDateRange","handleResetDates","style","display","flexDirection","alignItems","children","type","value","tempStartDate","onChange","e","setTempStartDate","target","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","tempEndDate","setTempEndDate","startDate","endDate","Button","variant","color","onClick","disabled","height","width","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/order_tracking/client/src/components/setDateRange.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\n\r\n\r\n\r\n  const SetDateRange =(handleSetDateRange, handleResetDates)=>{\r\n    \r\n    return(\r\n      <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\r\n        <div style={{ display: 'flex', flexDirection: 'column'}}>\r\n          <input\r\n            type=\"date\"\r\n            value={tempStartDate}\r\n            onChange={(e) => setTempStartDate(e.target.value)}\r\n            style={{ display: \"block\", marginTop: \"8px\" }}\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            value={tempEndDate}\r\n            onChange={(e) => setTempEndDate(e.target.value)}\r\n            style={{ display: \"block\", marginTop: \"8px\" }}\r\n          />\r\n        </div>\r\n        <div style={{ display: 'flex', flexDirection: 'column'}}>\r\n          {!startDate && !endDate && (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleSetDateRange}\r\n              disabled={!tempStartDate || !tempEndDate} // Кнопка активна только при выборе обеих дат\r\n              style={{\r\n                marginTop: '8px',\r\n                height: '40px', // Высота кнопки\r\n                width: '60px', // Ширина кнопки\r\n                fontSize: '12px' // Размер шрифта внутри кнопки\r\n              }}\r\n            >\r\n              Set<br/> dates\r\n            </Button>\r\n          )}\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={handleResetDates}\r\n            style={{\r\n              marginTop: '8px',\r\n              height: '40px', // Высота кнопки\r\n              width: '60px', // Ширина кнопки\r\n              fontSize: '12px' // Размер шрифта внутри кнопки\r\n            }}\r\n          >\r\n            <ClearIcon />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default SetDateRange;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}