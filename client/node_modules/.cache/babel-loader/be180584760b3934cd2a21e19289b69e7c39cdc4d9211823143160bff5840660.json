{"ast":null,"code":"// src/features/expensesSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nexport const costsSlice = createSlice({\n  name: 'costsState',\n  initialState: [],\n  // Начальное состояние — это просто массив\n  reducers: {\n    setCostsState: (state, action) => {\n      return action.payload; // Возвращаем новый массив расходов\n    },\n    clearCostsState: () => {\n      return []; // Возвращаем пустой массив для очистки\n    }\n  }\n});\nexport const {\n  setCostsState,\n  clearCostsState\n} = costsSlice.actions;\nexport default costsSlice.reducer;","map":{"version":3,"names":["createSlice","costsSlice","name","initialState","reducers","setCostsState","state","action","payload","clearCostsState","actions","reducer"],"sources":["C:/Users/admin/Desktop/order_tracking/client/src/features/costsSlice.js"],"sourcesContent":["// src/features/expensesSlice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const costsSlice = createSlice({\r\n  name: 'costsState',\r\n  initialState: [],  // Начальное состояние — это просто массив\r\n  reducers: {\r\n    setCostsState: (state, action) => {\r\n      return action.payload;  // Возвращаем новый массив расходов\r\n    },\r\n    clearCostsState: () => {\r\n      return [];  // Возвращаем пустой массив для очистки\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setCostsState, clearCostsState } = costsSlice.actions;\r\nexport default costsSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE,EAAE;EAAG;EACnBC,QAAQ,EAAE;IACRC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChC,OAAOA,MAAM,CAACC,OAAO,CAAC,CAAE;IAC1B,CAAC;IACDC,eAAe,EAAEA,CAAA,KAAM;MACrB,OAAO,EAAE,CAAC,CAAE;IACd;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,aAAa;EAAEI;AAAgB,CAAC,GAAGR,UAAU,CAACS,OAAO;AACpE,eAAeT,UAAU,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}