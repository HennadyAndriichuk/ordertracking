{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\\\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u044B\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\trackingStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport TableRowComponent from './TableRowComponent';\nimport { createOrder } from '../../utils/backendApi'; // Импортируем функцию createOrder\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackingStatus = () => {\n  _s();\n  const columns = [\"Номер заказа\", \"Сумма документа\", \"Номер телефона\", \"Полное имя\", \"Себестоимость\", \"Статус\", \"Дата отправки\"];\n  const initialOrder = {\n    orderNumber: \"\",\n    documentAmount: \"\",\n    phoneNumber: \"\",\n    fullName: \"\",\n    costPrice: \"\",\n    status: \"\",\n    shippingDate: \"\",\n    isSorted: false\n  };\n  const [orders, setOrders] = useState([{\n    id: nanoid(),\n    data: initialOrder\n  }]);\n  const isInitialMount = useRef(true);\n  useEffect(() => {\n    if (isInitialMount.current) {\n      console.log('Массив с объектами данных заказов:', orders);\n      isInitialMount.current = false;\n    }\n  }, [orders]);\n  const addRow = () => {\n    setOrders([...orders, {\n      id: nanoid(),\n      data: initialOrder\n    }]);\n  };\n  const saveRow = async (data, rowIndex) => {\n    const newOrders = [...orders];\n    newOrders[rowIndex].data = data;\n    setOrders(newOrders);\n\n    // Выводим номер посылки и статус сортировки в консоль\n    console.log(`Номер посылки (строка ${rowIndex + 1}): ${data.orderNumber}`);\n    console.log(`Статус сортировки (строка ${rowIndex + 1}): ${data.isSorted}`);\n    try {\n      const response = await createOrder(data);\n      console.log('Order created:', response);\n    } catch (error) {\n      console.error('Error creating order:', error);\n    }\n  };\n  const deleteRow = rowIndex => {\n    const newOrders = orders.filter((_, index) => index !== rowIndex);\n    setOrders(newOrders);\n  };\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              onClick: addRow,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: orders.map((order, index) => /*#__PURE__*/_jsxDEV(TableRowComponent, {\n          data: order.data,\n          onSave: data => saveRow(data, index),\n          onDelete: () => deleteRow(index)\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackingStatus, \"eBGmKD7jcbjLdLbxm3Y24+dv5zc=\");\n_c = TrackingStatus;\nexport default TrackingStatus;\nvar _c;\n$RefreshReg$(_c, \"TrackingStatus\");","map":{"version":3,"names":["React","useState","useEffect","useRef","nanoid","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TableRowComponent","createOrder","jsxDEV","_jsxDEV","TrackingStatus","_s","columns","initialOrder","orderNumber","documentAmount","phoneNumber","fullName","costPrice","status","shippingDate","isSorted","orders","setOrders","id","data","isInitialMount","current","console","log","addRow","saveRow","rowIndex","newOrders","response","error","deleteRow","filter","_","index","component","children","map","column","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onClick","order","onSave","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/магазины/order_tracking/client/src/components/homePage/trackingStatus.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport TableRowComponent from './TableRowComponent';\r\nimport { createOrder } from '../../utils/backendApi'; // Импортируем функцию createOrder\r\n\r\nconst TrackingStatus = () => {\r\n  const columns = [\r\n    \"Номер заказа\",\r\n    \"Сумма документа\",\r\n    \"Номер телефона\",\r\n    \"Полное имя\",\r\n    \"Себестоимость\",\r\n    \"Статус\",\r\n    \"Дата отправки\"\r\n  ];\r\n\r\n  const initialOrder = {\r\n    orderNumber: \"\",\r\n    documentAmount: \"\",\r\n    phoneNumber: \"\",\r\n    fullName: \"\",\r\n    costPrice: \"\",\r\n    status: \"\",\r\n    shippingDate: \"\",\r\n    isSorted: false\r\n  };\r\n\r\n  const [orders, setOrders] = useState([{\r\n    id: nanoid(),\r\n    data: initialOrder\r\n  }]);\r\n\r\n  const isInitialMount = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (isInitialMount.current) {\r\n      console.log('Массив с объектами данных заказов:', orders);\r\n      isInitialMount.current = false;\r\n    }\r\n  }, [orders]);\r\n\r\n  const addRow = () => {\r\n    setOrders([...orders, { id: nanoid(), data: initialOrder }]);\r\n  };\r\n\r\n  const saveRow = async (data, rowIndex) => {\r\n    const newOrders = [...orders];\r\n    newOrders[rowIndex].data = data;\r\n    setOrders(newOrders);\r\n\r\n    // Выводим номер посылки и статус сортировки в консоль\r\n    console.log(`Номер посылки (строка ${rowIndex + 1}): ${data.orderNumber}`);\r\n    console.log(`Статус сортировки (строка ${rowIndex + 1}): ${data.isSorted}`);\r\n\r\n    try {\r\n      const response = await createOrder(data);\r\n      console.log('Order created:', response);\r\n    } catch (error) {\r\n      console.error('Error creating order:', error);\r\n    }\r\n  };\r\n\r\n  const deleteRow = (rowIndex) => {\r\n    const newOrders = orders.filter((_, index) => index !== rowIndex);\r\n    setOrders(newOrders);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell key={index}>{column}</TableCell>\r\n            ))}\r\n            <TableCell>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={addRow}>\r\n                Добавить строку\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders.map((order, index) => (\r\n            <TableRowComponent\r\n              key={order.id}\r\n              data={order.data}\r\n              onSave={(data) => saveRow(data, index)}\r\n              onDelete={() => deleteRow(index)}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TrackingStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}