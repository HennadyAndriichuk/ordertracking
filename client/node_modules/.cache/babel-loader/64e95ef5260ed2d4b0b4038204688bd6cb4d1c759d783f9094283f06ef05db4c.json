{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\\\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u044B\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\trackingStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport { nanoid } from 'nanoid';\nimport TableRowComponent from './TableRowComponent';\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackingStatus = () => {\n  _s();\n  const columns = [\"Номер заказа\", \"Сумма документа\", \"Номер телефона\", \"Полное имя\", \"Себестоимость\", \"Статус\", \"Дата отправки\"];\n  const initialOrder = {\n    orderNumber: \"\",\n    documentAmount: \"\",\n    phoneNumber: \"\",\n    fullName: \"\",\n    costPrice: \"\",\n    status: \"\",\n    dateCreated: \"\",\n    isSorted: false,\n    isStatusSorted: false,\n    isDateSorted: false\n  };\n  const [orders, setOrders] = useState([]);\n  const [sortState, setSortState] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchedOrders = await fetchOrders();\n      setOrders(fetchedOrders);\n    };\n    fetchData();\n  }, []);\n  const addRow = () => {\n    setOrders([...orders, {\n      id: nanoid(),\n      ...initialOrder\n    }]);\n  };\n  const saveRow = async data => {\n    if (data.id) {\n      const response = await updateOrder(data.id, data);\n      setOrders(response);\n    } else {\n      const response = await createOrder(data);\n      setOrders(response);\n    }\n  };\n  const deleteRow = async (id, isLocal) => {\n    if (isLocal) {\n      setOrders(orders.filter(order => order.id !== id));\n    } else {\n      const response = await deleteOrder(id);\n      setOrders(response);\n    }\n  };\n  const handleSortChange = (id, key, isSorted) => {\n    setSortState(prevState => ({\n      ...prevState,\n      [id]: {\n        ...prevState[id],\n        [key]: isSorted\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              onClick: addRow,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: orders.map((order, index) => /*#__PURE__*/_jsxDEV(TableRowComponent, {\n          id: order.id,\n          data: order,\n          onSave: saveRow,\n          onDelete: isLocal => deleteRow(order.id, isLocal),\n          isNew: !order.orderNumber,\n          onSortChange: handleSortChange\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackingStatus, \"fRYuKxmlyOGHRv8sS+Ga2KNP400=\");\n_c = TrackingStatus;\nexport default TrackingStatus;\nvar _c;\n$RefreshReg$(_c, \"TrackingStatus\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","nanoid","TableRowComponent","fetchOrders","createOrder","updateOrder","deleteOrder","jsxDEV","_jsxDEV","TrackingStatus","_s","columns","initialOrder","orderNumber","documentAmount","phoneNumber","fullName","costPrice","status","dateCreated","isSorted","isStatusSorted","isDateSorted","orders","setOrders","sortState","setSortState","fetchData","fetchedOrders","addRow","id","saveRow","data","response","deleteRow","isLocal","filter","order","handleSortChange","key","prevState","component","children","map","column","index","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onClick","onSave","onDelete","isNew","onSortChange","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/магазины/order_tracking/client/src/components/homePage/trackingStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport { nanoid } from 'nanoid';\r\nimport TableRowComponent from './TableRowComponent';\r\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\r\n\r\nconst TrackingStatus = () => {\r\n  const columns = [\r\n    \"Номер заказа\",\r\n    \"Сумма документа\",\r\n    \"Номер телефона\",\r\n    \"Полное имя\",\r\n    \"Себестоимость\",\r\n    \"Статус\",\r\n    \"Дата отправки\"\r\n  ];\r\n\r\n  const initialOrder = {\r\n    orderNumber: \"\",\r\n    documentAmount: \"\",\r\n    phoneNumber: \"\",\r\n    fullName: \"\",\r\n    costPrice: \"\",\r\n    status: \"\",\r\n    dateCreated: \"\",\r\n    isSorted: false,\r\n    isStatusSorted: false,\r\n    isDateSorted: false\r\n  };\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [sortState, setSortState] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const fetchedOrders = await fetchOrders();\r\n      setOrders(fetchedOrders);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const addRow = () => {\r\n    setOrders([...orders, { id: nanoid(), ...initialOrder }]);\r\n  };\r\n\r\n  const saveRow = async (data) => {\r\n    if (data.id) {\r\n      const response = await updateOrder(data.id, data);\r\n      setOrders(response);\r\n    } else {\r\n      const response = await createOrder(data);\r\n      setOrders(response);\r\n    }\r\n  };\r\n\r\n  const deleteRow = async (id, isLocal) => {\r\n    if (isLocal) {\r\n      setOrders(orders.filter(order => order.id !== id));\r\n    } else {\r\n      const response = await deleteOrder(id);\r\n      setOrders(response);\r\n    }\r\n  };\r\n\r\n  const handleSortChange = (id, key, isSorted) => {\r\n    setSortState(prevState => ({\r\n      ...prevState,\r\n      [id]: {\r\n        ...prevState[id],\r\n        [key]: isSorted\r\n      }\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell key={index}>{column}</TableCell>\r\n            ))}\r\n            <TableCell>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={addRow}>\r\n                Добавить строку\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders.map((order, index) => (\r\n            <TableRowComponent\r\n              key={order.id}\r\n              id={order.id}\r\n              data={order}\r\n              onSave={saveRow}\r\n              onDelete={(isLocal) => deleteRow(order.id, isLocal)}\r\n              isNew={!order.orderNumber}\r\n              onSortChange={handleSortChange}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TrackingStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}