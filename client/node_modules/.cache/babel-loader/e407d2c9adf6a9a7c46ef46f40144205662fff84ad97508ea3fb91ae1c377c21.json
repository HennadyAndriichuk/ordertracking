{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\\\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u044B\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\PhoneNumberInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField } from '@mui/material';\nimport InputMask from 'react-input-mask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhoneNumberInput = ({\n  value,\n  onChange,\n  onError\n}) => {\n  _s();\n  const [showError, setShowError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleChange = e => {\n    const newValue = e.target.value;\n    const phoneNumberPattern = /^\\(\\d{3}\\) \\d{3}-\\d{4}$/; // Маска для проверки формата (XXX) XXX-XXXX\n\n    if (phoneNumberPattern.test(newValue)) {\n      setShowError(false);\n      setErrorMessage('');\n      onError(false);\n    } else {\n      setShowError(true);\n      setErrorMessage('Номер должен быть в формате (XXX) XXX-XXXX');\n      onError(true);\n    }\n    onChange(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(InputMask, {\n    mask: \"(999) 999-9999\",\n    value: value,\n    onChange: handleChange,\n    onBlur: handleChange,\n    children: () => /*#__PURE__*/_jsxDEV(TextField, {\n      value: value,\n      onChange: handleChange,\n      variant: \"outlined\",\n      size: \"small\",\n      fullWidth: true,\n      placeholder: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n      error: showError,\n      helperText: showError ? errorMessage : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PhoneNumberInput, \"s9HIPPEY3kAJpC81q/AZYaxZTn8=\");\n_c = PhoneNumberInput;\nexport default PhoneNumberInput;\nvar _c;\n$RefreshReg$(_c, \"PhoneNumberInput\");","map":{"version":3,"names":["React","useState","useEffect","TextField","InputMask","jsxDEV","_jsxDEV","PhoneNumberInput","value","onChange","onError","_s","showError","setShowError","errorMessage","setErrorMessage","handleChange","e","newValue","target","phoneNumberPattern","test","mask","onBlur","children","variant","size","fullWidth","placeholder","error","helperText","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/магазины/order_tracking/client/src/components/homePage/PhoneNumberInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField } from '@mui/material';\r\nimport InputMask from 'react-input-mask';\r\n\r\nconst PhoneNumberInput = ({ value, onChange, onError }) => {\r\n  const [showError, setShowError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const newValue = e.target.value;\r\n    const phoneNumberPattern = /^\\(\\d{3}\\) \\d{3}-\\d{4}$/; // Маска для проверки формата (XXX) XXX-XXXX\r\n\r\n    if (phoneNumberPattern.test(newValue)) {\r\n      setShowError(false);\r\n      setErrorMessage('');\r\n      onError(false);\r\n    } else {\r\n      setShowError(true);\r\n      setErrorMessage('Номер должен быть в формате (XXX) XXX-XXXX');\r\n      onError(true);\r\n    }\r\n\r\n    onChange(newValue);\r\n  };\r\n\r\n  return (\r\n    <InputMask\r\n      mask=\"(999) 999-9999\"\r\n      value={value}\r\n      onChange={handleChange}\r\n      onBlur={handleChange}\r\n    >\r\n      {() => (\r\n        <TextField\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n          placeholder=\"Номер телефона\"\r\n          error={showError}\r\n          helperText={showError ? errorMessage : ''}\r\n        />\r\n      )}\r\n    </InputMask>\r\n  );\r\n};\r\n\r\nexport default PhoneNumberInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,eAAe;AACzC,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMe,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACX,KAAK;IAC/B,MAAMY,kBAAkB,GAAG,yBAAyB,CAAC,CAAC;;IAEtD,IAAIA,kBAAkB,CAACC,IAAI,CAACH,QAAQ,CAAC,EAAE;MACrCL,YAAY,CAAC,KAAK,CAAC;MACnBE,eAAe,CAAC,EAAE,CAAC;MACnBL,OAAO,CAAC,KAAK,CAAC;IAChB,CAAC,MAAM;MACLG,YAAY,CAAC,IAAI,CAAC;MAClBE,eAAe,CAAC,4CAA4C,CAAC;MAC7DL,OAAO,CAAC,IAAI,CAAC;IACf;IAEAD,QAAQ,CAACS,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEZ,OAAA,CAACF,SAAS;IACRkB,IAAI,EAAC,gBAAgB;IACrBd,KAAK,EAAEA,KAAM;IACbC,QAAQ,EAAEO,YAAa;IACvBO,MAAM,EAAEP,YAAa;IAAAQ,QAAA,EAEpBA,CAAA,kBACClB,OAAA,CAACH,SAAS;MACRK,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEO,YAAa;MACvBS,OAAO,EAAC,UAAU;MAClBC,IAAI,EAAC,OAAO;MACZC,SAAS;MACTC,WAAW,EAAC,iFAAgB;MAC5BC,KAAK,EAAEjB,SAAU;MACjBkB,UAAU,EAAElB,SAAS,GAAGE,YAAY,GAAG;IAAG;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAACvB,EAAA,CA1CIJ,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AA4CtB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}