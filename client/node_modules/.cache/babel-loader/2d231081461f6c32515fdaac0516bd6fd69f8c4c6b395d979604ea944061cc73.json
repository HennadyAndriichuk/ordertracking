{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\\\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u044B\\\\order_tracking\\\\client\\\\src\\\\components\\\\homePage\\\\trackingStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\nimport { nanoid } from 'nanoid';\nimport TableRowComponent from './TableRowComponent';\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrackingStatus = () => {\n  _s();\n  const columns = [\"Номер заказа\", \"Сумма документа\", \"Номер телефона\", \"Полное имя\", \"Себестоимость\", \"Статус\", \"Дата отправки\"];\n  const initialOrder = {\n    id: nanoid(),\n    orderNumber: \"\",\n    documentAmount: \"\",\n    phoneNumber: \"\",\n    fullName: \"\",\n    costPrice: \"\",\n    status: \"\",\n    dateCreated: \"\",\n    isSorted: false,\n    isStatusSorted: false,\n    isDateSorted: false,\n    isNew: true,\n    error: false,\n    isChanged: true\n  };\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchedOrders = await fetchOrders();\n      setOrders(fetchedOrders);\n    };\n    fetchData();\n  }, []);\n  const addRow = () => {\n    setOrders([...orders, {\n      ...initialOrder\n    }]);\n  };\n  const saveRow = async data => {\n    const {\n      id,\n      orderNumber,\n      documentAmount,\n      phoneNumber,\n      fullName,\n      costPrice,\n      status,\n      dateCreated\n    } = data;\n    const payload = {\n      id,\n      orderNumber,\n      documentAmount,\n      phoneNumber,\n      fullName,\n      costPrice,\n      status,\n      dateCreated\n    };\n    if (data.isNew) {\n      const response = await createOrder(payload);\n      setOrders(response);\n    } else {\n      const response = await updateOrder(data.id, payload);\n      setOrders(response);\n    }\n  };\n  const deleteRow = async (id, isLocal) => {\n    if (isLocal) {\n      setOrders(orders.filter(order => order.id !== id));\n    } else {\n      const response = await deleteOrder(id);\n      setOrders(response);\n    }\n  };\n  const handleSortChange = (id, key, isSorted) => {\n    const updatedOrders = orders.map(order => order.id === id ? {\n      ...order,\n      [key]: isSorted\n    } : order);\n    setOrders(updatedOrders);\n  };\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              onClick: addRow,\n              children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: orders.map((order, index) => /*#__PURE__*/_jsxDEV(TableRowComponent, {\n          id: order.id,\n          data: {\n            ...order,\n            isNew: order.orderNumber === \"\"\n          },\n          onSave: saveRow,\n          onDelete: isLocal => deleteRow(order.id, isLocal),\n          onSortChange: handleSortChange\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(TrackingStatus, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = TrackingStatus;\nexport default TrackingStatus;\nvar _c;\n$RefreshReg$(_c, \"TrackingStatus\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","nanoid","TableRowComponent","fetchOrders","createOrder","updateOrder","deleteOrder","jsxDEV","_jsxDEV","TrackingStatus","_s","columns","initialOrder","id","orderNumber","documentAmount","phoneNumber","fullName","costPrice","status","dateCreated","isSorted","isStatusSorted","isDateSorted","isNew","error","isChanged","orders","setOrders","fetchData","fetchedOrders","addRow","saveRow","data","payload","response","deleteRow","isLocal","filter","order","handleSortChange","key","updatedOrders","map","component","children","column","index","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","onClick","onSave","onDelete","onSortChange","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/магазины/order_tracking/client/src/components/homePage/trackingStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@mui/material';\r\nimport { nanoid } from 'nanoid';\r\nimport TableRowComponent from './TableRowComponent';\r\nimport { fetchOrders, createOrder, updateOrder, deleteOrder } from '../../utils/backendApi';\r\n\r\nconst TrackingStatus = () => {\r\n  const columns = [\r\n    \"Номер заказа\",\r\n    \"Сумма документа\",\r\n    \"Номер телефона\",\r\n    \"Полное имя\",\r\n    \"Себестоимость\",\r\n    \"Статус\",\r\n    \"Дата отправки\"\r\n  ];\r\n\r\n  const initialOrder = {\r\n    id: nanoid(),\r\n    orderNumber: \"\",\r\n    documentAmount: \"\",\r\n    phoneNumber: \"\",\r\n    fullName: \"\",\r\n    costPrice: \"\",\r\n    status: \"\",\r\n    dateCreated: \"\",\r\n    isSorted: false,\r\n    isStatusSorted: false,\r\n    isDateSorted: false,\r\n    isNew: true,\r\n    error: false,\r\n    isChanged: true\r\n  };\r\n\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const fetchedOrders = await fetchOrders();\r\n      setOrders(fetchedOrders);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const addRow = () => {\r\n    setOrders([...orders, { ...initialOrder }]);\r\n  };\r\n\r\n  const saveRow = async (data) => {\r\n    const { id, orderNumber, documentAmount, phoneNumber, fullName, costPrice, status, dateCreated } = data;\r\n    const payload = { id, orderNumber, documentAmount, phoneNumber, fullName, costPrice, status, dateCreated };\r\n\r\n    if (data.isNew) {\r\n      const response = await createOrder(payload);\r\n      setOrders(response);\r\n    } else {\r\n      const response = await updateOrder(data.id, payload);\r\n      setOrders(response);\r\n    }\r\n  };\r\n\r\n  const deleteRow = async (id, isLocal) => {\r\n    if (isLocal) {\r\n      setOrders(orders.filter(order => order.id !== id));\r\n    } else {\r\n      const response = await deleteOrder(id);\r\n      setOrders(response);\r\n    }\r\n  };\r\n\r\n  const handleSortChange = (id, key, isSorted) => {\r\n    const updatedOrders = orders.map(order => \r\n      order.id === id ? { ...order, [key]: isSorted } : order\r\n    );\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell key={index}>{column}</TableCell>\r\n            ))}\r\n            <TableCell>\r\n              <Button color=\"primary\" variant=\"contained\" onClick={addRow}>\r\n                Добавить строку\r\n              </Button>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders.map((order, index) => (\r\n            <TableRowComponent\r\n              key={order.id}\r\n              id={order.id}\r\n              data={{ ...order, isNew: order.orderNumber === \"\" }}\r\n              onSave={saveRow}\r\n              onDelete={(isLocal) => deleteRow(order.id, isLocal)}\r\n              onSortChange={handleSortChange}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TrackingStatus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}