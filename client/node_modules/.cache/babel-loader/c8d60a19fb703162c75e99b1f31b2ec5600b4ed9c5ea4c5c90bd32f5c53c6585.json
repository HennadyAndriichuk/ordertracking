{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\order_tracking\\\\client\\\\src\\\\components\\\\metricsPage\\\\Metrics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { fetchApi } from '../../utils/backendApi';\nimport DisplayMetric from './DisplayMetric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [\"Сумма всех заказов\", \"Прибыль доставленных\", \"Затраты\", \"Сумма документа\", \"Номер телефона\", \"Себестоимость\"];\nconst sumAllValues = dataArray => {\n  if (dataArray.length === 0) return 0; // Проверка на пустой массив\n\n  return dataArray.reduce((totalSum, obj) => {\n    const {\n      id,\n      date,\n      ...rest\n    } = obj;\n    const sum = Object.values(rest).reduce((acc, value) => acc + Number(value), 0);\n    return totalSum + sum;\n  }, 0);\n};\nconst calculateSumOfDifferences = (dataArray, totalCostsSum) => {\n  if (dataArray.length === 0) return 0; // Проверка на пустой массив\n\n  const totalSum = dataArray.reduce((totalSum, obj) => {\n    if (obj.status === 'Відправлення отримано. Грошовий переказ видано одержувачу.' || obj.status === 'Відправлення отримано') {\n      const documentSum = Number(obj.documentSum);\n      const cost = Number(obj.cost);\n      const difference = documentSum - cost;\n      return totalSum + difference;\n    }\n    return totalSum;\n  }, 0);\n  return totalSum - totalCostsSum; // Вычисляем чистую прибыль\n};\nconst calculateTotalDocumentSum = dataArray => {\n  if (dataArray.length === 0) return 0; // Проверка на пустой массив\n\n  return dataArray.reduce((total, obj) => {\n    const documentSum = Number(obj.documentSum);\n    return total + documentSum;\n  }, 0);\n};\nconst DisplayMetrics = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [costs, setCosts] = useState([]);\n  const [metrics, setMetrics] = useState([]);\n  const [totalCostsSum, setTotalCostsSum] = useState(0);\n  const fetchOrdersUrl = \"http://localhost:4000/orders\";\n  const fetchExpensesUrl = \"http://localhost:4000/expenses\";\n  useEffect(() => {\n    const fetchData = async () => {\n      const [fetchedOrders, fetchedCosts] = await Promise.all([fetchApi(fetchOrdersUrl, 'GET'), fetchApi(fetchExpensesUrl, 'GET')]);\n      setOrders(fetchedOrders);\n      setCosts(fetchedCosts);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const totalSum = sumAllValues(costs);\n    if (totalSum !== 0) {\n      setTotalCostsSum(totalSum);\n      setMetrics(prevMetrics => [totalSum, ...prevMetrics]);\n    }\n  }, [costs]);\n  useEffect(() => {\n    const netProfit = calculateSumOfDifferences(orders, totalCostsSum);\n    if (netProfit !== 0) {\n      setMetrics(prevMetrics => [netProfit, ...prevMetrics]);\n    }\n  }, [orders, totalCostsSum]);\n  useEffect(() => {\n    const totalDocumentSum = calculateTotalDocumentSum(orders);\n    if (totalDocumentSum !== 0) {\n      setMetrics(prevMetrics => [totalDocumentSum, ...prevMetrics]);\n    }\n  }, [orders]);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: columns.map((column, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: metrics.map((metric, index) => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(DisplayMetric, {\n              value: metric\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayMetrics, \"OU91WTvgyVuPecbmC/YFig7PAVo=\");\n_c = DisplayMetrics;\nexport default DisplayMetrics;\nvar _c;\n$RefreshReg$(_c, \"DisplayMetrics\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","fetchApi","DisplayMetric","jsxDEV","_jsxDEV","columns","sumAllValues","dataArray","length","reduce","totalSum","obj","id","date","rest","sum","Object","values","acc","value","Number","calculateSumOfDifferences","totalCostsSum","status","documentSum","cost","difference","calculateTotalDocumentSum","total","DisplayMetrics","_s","orders","setOrders","costs","setCosts","metrics","setMetrics","setTotalCostsSum","fetchOrdersUrl","fetchExpensesUrl","fetchData","fetchedOrders","fetchedCosts","Promise","all","prevMetrics","netProfit","totalDocumentSum","component","children","map","column","index","fileName","_jsxFileName","lineNumber","columnNumber","metric","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/order_tracking/client/src/components/metricsPage/Metrics.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\r\nimport { fetchApi } from '../../utils/backendApi';\r\nimport DisplayMetric from './DisplayMetric';\r\n\r\nconst columns = [\"Сумма всех заказов\", \"Прибыль доставленных\", \"Затраты\", \"Сумма документа\", \"Номер телефона\", \"Себестоимость\"];\r\n\r\nconst sumAllValues = (dataArray) => {\r\n  if (dataArray.length === 0) return 0; // Проверка на пустой массив\r\n\r\n  return dataArray.reduce((totalSum, obj) => {\r\n    const { id, date, ...rest } = obj;\r\n    const sum = Object.values(rest).reduce((acc, value) => acc + Number(value), 0);\r\n    return totalSum + sum;\r\n  }, 0);\r\n};\r\n\r\nconst calculateSumOfDifferences = (dataArray, totalCostsSum) => {\r\n  if (dataArray.length === 0) return 0; // Проверка на пустой массив\r\n\r\n  const totalSum = dataArray.reduce((totalSum, obj) => {\r\n    if (obj.status === 'Відправлення отримано. Грошовий переказ видано одержувачу.' || obj.status === 'Відправлення отримано') {\r\n      const documentSum = Number(obj.documentSum);\r\n      const cost = Number(obj.cost);\r\n      const difference = documentSum - cost;\r\n      return totalSum + difference;\r\n    }\r\n    return totalSum;\r\n  }, 0);\r\n\r\n  return totalSum - totalCostsSum; // Вычисляем чистую прибыль\r\n};\r\n\r\nconst calculateTotalDocumentSum = (dataArray) => {\r\n  if (dataArray.length === 0) return 0; // Проверка на пустой массив\r\n\r\n  return dataArray.reduce((total, obj) => {\r\n    const documentSum = Number(obj.documentSum);\r\n    return total + documentSum;\r\n  }, 0);\r\n};\r\n\r\nconst DisplayMetrics = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [costs, setCosts] = useState([]);\r\n  const [metrics, setMetrics] = useState([]);\r\n  const [totalCostsSum, setTotalCostsSum] = useState(0);\r\n\r\n  const fetchOrdersUrl = \"http://localhost:4000/orders\";\r\n  const fetchExpensesUrl = \"http://localhost:4000/expenses\";\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const [fetchedOrders, fetchedCosts] = await Promise.all([\r\n        fetchApi(fetchOrdersUrl, 'GET'),\r\n        fetchApi(fetchExpensesUrl, 'GET')\r\n      ]);\r\n\r\n      setOrders(fetchedOrders);\r\n      setCosts(fetchedCosts);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const totalSum = sumAllValues(costs);\r\n    if (totalSum !== 0) {\r\n      setTotalCostsSum(totalSum);\r\n      setMetrics(prevMetrics => [totalSum, ...prevMetrics]);\r\n    }\r\n  }, [costs]);\r\n\r\n  useEffect(() => {\r\n    const netProfit = calculateSumOfDifferences(orders, totalCostsSum);\r\n    if (netProfit !== 0) {\r\n      setMetrics(prevMetrics => [netProfit, ...prevMetrics]);\r\n    }\r\n  }, [orders, totalCostsSum]);\r\n\r\n  useEffect(() => {\r\n    const totalDocumentSum = calculateTotalDocumentSum(orders);\r\n    if (totalDocumentSum !== 0) {\r\n      setMetrics(prevMetrics => [totalDocumentSum, ...prevMetrics]);\r\n    }\r\n  }, [orders]);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column, index) => (\r\n              <TableCell key={index}>{column}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          <TableRow>\r\n            {metrics.map((metric, index) => (\r\n              <TableCell key={index}>\r\n                <DisplayMetric value={metric} />\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default DisplayMetrics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}